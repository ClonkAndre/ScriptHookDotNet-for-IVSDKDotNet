<?xml version="1.0"?>
<doc>
    <assembly>
        "IVSDKDotNetWrapper"
    </assembly>
    <members>
        <member name="P:IVSDKDotNet.IVRadioTrackManager.RadioStations">
            <summary>
Gets or sets the array of every radio station there is in the game. Length of this array: 30.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVRadioTrackManager.NumRadioStations">
            <summary>
Gets or sets the number of radio stations.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVRadioTrackManager.TaxiGarageRadioState">
            <summary>
Undocumented.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVRadioTrackManager.LazlowStationLocked">
            <summary>
Gets or sets if the lazlow station is locked.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVRadioStation.Name">
            <summary>
Gets the name of the radio station.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVCheat.HasPlayerCheated">
            <summary>
Gets or sets if the player has cheated.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVProjectileInfo.AddProjectile(IVSDKDotNet.IVEntity,System.Int32,IVSDKDotNet.IVMatrix,System.Numerics.Vector3,System.Numerics.Vector3,IVSDKDotNet.IVEntity,System.Boolean,IVSDKDotNet.IVObject)">
            <summary>
Adds a projectile to the world.
</summary>
            <param name="pEntProjOwner">The owner of the projectile.</param>
            <param name="projType">The projectile type. Only '4' (Grenade), '5' (Molotov) and '6' (Rocket) worked for me.</param>
            <param name="pMatrix">The actual position of the projectile.</param>
            <param name="vecStart">Start pos of the projectile? (The actual position of the projectile is read from the given matrix so no idea what this does.)</param>
            <param name="vecEnd">End pos (or direction) of the projectile?</param>
            <param name="pTargetEntity">Can be null.</param>
            <param name="noMPSync">If the projectile should be synced over the network or not.</param>
            <param name="pProjectileObject">The projectile object to shoot. Can be null.</param>
            <returns />
        </member>
        <member name="M:IVSDKDotNet.IVAchievements.IsAchievementUnlocked(System.Int32)">
            <summary>
Checks if a specific award is unlocked.
</summary>
            <param name="id">The id of the achievement.</param>
            <returns>True if the achievement is unlocked. Otherwise, false.</returns>
        </member>
        <member name="M:IVSDKDotNet.IVAchievements.AwardAchievement(System.Int32)">
            <summary>
Awards an achievement with the given id.
</summary>
            <param name="id">The id of the achievement.</param>
        </member>
        <member name="M:IVSDKDotNet.IVGenericGameStorage.GetDefaultPCSaveFileName">
            <summary>
Gets the default save file name for GTA IV on PC.
</summary>
            <returns>Will return "SGTA4".</returns>
        </member>
        <member name="M:IVSDKDotNet.IVPedType.FindPedType(System.String)">
            <summary>
Gets the pedtype id from string.
</summary>
            <param name="type">The ped type to get the id from.</param>
            <returns>The id from the given type.</returns>
        </member>
        <member name="M:IVSDKDotNet.IVPedType.IsPedTypePlayer(System.String)">
            <summary>
Checks if the given type is a player.
If true, the game sets CPedModelInfo::m_bStreamedPed to 1.
</summary>
            <param name="type">The ped type to check.</param>
            <returns>True if the type is PLAYER1, PLAYER2, PLAYER_NETWORK or PLAYER_UNUSED.</returns>
        </member>
        <member name="M:IVSDKDotNet.IVPickups.GetTypeOfPickup(System.Int32)">
            <summary>
Retrieves the type of the pickup at the given index from the "PickupTypes" array.
</summary>
            <param name="index">The index of where the pickup is placed at in the "Pickups" array to get the type from.</param>
            <returns>The type of the pickup at the given index.</returns>
        </member>
        <member name="M:IVSDKDotNet.IVPickups.DoPickUpEffects">
            <summary>
Does the pickup glow thing.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVPickups.RemoveTemporaryRadarBlipsForPickups">
            <summary>
Removes all temporary radar blip.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVPickups.CreateTemporaryRadarBlipForPickup(System.Numerics.Vector3,System.Int32)">
            <summary>
Creates a temporary radar blip for the given pickup only.
</summary>
            <param name="position">The position of where the blip should be created.</param>
            <param name="pickupIndex">The index of the pickup to assign this blip to.</param>
            <returns>The index of the created blip, or -1 if the blip couldn't get created.</returns>
        </member>
        <member name="M:IVSDKDotNet.IVPickups.CreateTemporaryRadarBlipsForPickupsInArea(System.Numerics.Vector3,System.Single,System.Int32)">
            <summary>
Creates a temporary radar blip for each pickup within the range around the given position.
</summary>
            <param name="position">The position of where to check for pickups.</param>
            <param name="range">The range to check for pickups around the given position.</param>
            <param name="type">The pickup type to look for.</param>
        </member>
        <member name="M:IVSDKDotNet.IVPickups.RemovePickup(System.Int32)">
            <summary>
Removes a pickup with the given handle.
</summary>
            <param name="handle">The handle of the pickup to remove.</param>
            <returns>The index of the removed pickup, or -1 if the pickup couldn't get removed.</returns>
        </member>
        <member name="M:IVSDKDotNet.IVPickups.CreatePickup(System.Numerics.Vector3,System.Numerics.Vector3,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.UInt32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte)">
            <summary>
Creates a new pickup.
</summary>
            <param name="position">The position where to create the pickup.</param>
            <param name="rotation">The rotation of the pickup.</param>
            <param name="modelIndex">The model index (not the hash) of the object to create for this pickup. You also dont need to request the model first as GTA will handle it for you.</param>
            <param name="type">The pickup type.</param>
            <param name="a5">Unknown.</param>
            <param name="a6">Unknown.</param>
            <param name="a7_maybeBlipRelated" />
            <param name="objPointerMaybe" />
            <param name="a12">Unknown.</param>
            <param name="a13">Unknown.</param>
            <returns>The handle of the pickup created. Returns -1 if the pickup could not be created.</returns>
        </member>
        <member name="M:IVSDKDotNet.IVPickups.ConvertIndexToHandle(System.Int32)">
            <summary>
Converts the pickup index to an actual handle so it can be used with native functions.
</summary>
            <param name="index">The index of the pickup in the array of pickups.</param>
            <returns>If successful, the handle is returned. Otherwise, -1.</returns>
        </member>
        <member name="M:IVSDKDotNet.IVPickups.Reset">
            <summary>
Removes and resets all pickups (not the actual pickup object).
It also resets all the settings related with pickups to their default value.
</summary>
            <returns>Always 0</returns>
        </member>
        <member name="M:IVSDKDotNet.IVPickups.Shutdown">
            <summary>
Destroys all pickups.
</summary>
            <returns>Something.</returns>
        </member>
        <member name="P:IVSDKDotNet.IVPickups.PickupTypes">
            <summary>
Seemingly only contains the pickup types.
You should use the "GetTypeOfPickup" function if you want to get the type of a pickup.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVPickups.Pickups">
            <summary>
Contains all registered pickups.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVPickup.Destroy">
            <summary>
Gets rid of this pickup and also of the attached blip if it has one.
</summary>
            <returns>Something.</returns>
        </member>
        <member name="P:IVSDKDotNet.IVPickup.Type">
            <summary>
The pickup type.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVPickup.field_42">
            <summary>
Some important index.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVPickup.ModelIndex">
            <summary>
The index of the model of this pickup.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVPickup.Position">
            <summary>
The pickup position.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVPickup.LastPickedUpTime">
            <summary>
The total game time in milliseconds when the pickup was last picked up.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVPickup.Blip">
            <summary>
The handle of the blip attached to this pickup.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVPickup.RoomKey">
            <summary>
The key of the room this pickup is in.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVPickup.field_8">
            <summary>
Seems to be related to interiors.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVPickup.WorldObject">
            <summary>
Pointer to the IVObject which is created for the pickup.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVPickup.field_0">
            <summary>
Something timer related. But doesn't get used that often.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVShaderLib.GetTechniqueID(System.String)">
            <summary>
Gets the technique id based on the technique name.
</summary>
            <param name="name">The name of the technique like default, unlit, deferred, etc.</param>
            <returns>The technique id.</returns>
        </member>
        <member name="M:IVSDKDotNet.IVMenuManager.SetSetting(IVSDKDotNet.Enums.eSettings,System.UInt32)">
            <summary>
Sets the value of the given setting.
</summary>
            <param name="setting">The setting you want to change the value of.</param>
            <param name="value">The new value you want to set the setting with.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMenuManager.GetSetting(IVSDKDotNet.Enums.eSettings)">
            <summary>
Gets the value of the given setting.
</summary>
            <param name="setting">The setting you want to get the value of.</param>
            <returns>The value of the setting.</returns>
        </member>
        <member name="P:IVSDKDotNet.IVMenuManager.VehicleDensity">
            <summary>
Gets or sets the Vehicle Density.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVMenuManager.FloatSaturation">
            <summary>
Gets or sets the saturation of the game.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVMenuManager.FloatContrast">
            <summary>
Gets or sets the contrast of the game.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVMenuManager.FloatBrightness">
            <summary>
Gets or sets the brightness of the game.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVMenuManager.Saturation">
            <summary>
Gets or sets the saturation of the game.
This value is written to 'SaturationFloat' when changed in menu.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVMenuManager.Contrast">
            <summary>
Gets or sets the contrast of the game.
This value is written to 'ContrastFloat' when changed in menu.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVMenuManager.Brightness">
            <summary>
Gets or sets the brightness of the game.
This value is written to 'BrightnessFloat' when changed in menu.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVMenuManager.MouseSensitivity">
            <summary>
Gets or sets the Mouse Sensitivity.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVMenuManager.RadarMode">
            <summary>
Gets or sets the current radar mode.
O = Off, 1 = On, 2 = Blips only.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVMenuManager.HudOn">
            <summary>
Gets or sets if the Hud should be visible or not.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVMenuManager.HeliMouseControls">
            <summary>
Gets or sets if the Heli Mouse Controls option is active.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVMenuManager.ClipCapture">
            <summary>
Gets or sets if the Clip Capture option is active.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVMenuManager.AutoSave">
            <summary>
Gets or sets if the Auto Save option is active.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVMenuManager.InvertRightStickX">
            <summary>
Gets or sets if the X-Axis of the Right Stick should be inverted.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVMenuManager.InvertMouseX">
            <summary>
Gets or sets if the X-Axis of the Mouse should be inverted.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVDrawCurvedWindowDC.Create(System.Numerics.Vector2,System.Drawing.SizeF,System.Drawing.Color)">
            <summary>
Draws a curved window on screen.
</summary>
            <param name="pos">The position. Coordinates are ratio of screen (0-1).</param>
            <param name="size">The size of the window.</param>
            <param name="color">The color of the window. RGB is ignored, only alpha used.</param>
            <returns />
        </member>
        <member name="M:IVSDKDotNet.IVDrawRectDC.Create(System.Drawing.RectangleF,System.Drawing.Color)">
            <summary>
Draws a rectangle on screen. Also works in main menu.
</summary>
            <param name="rect">The rectangle. Coordinates are in pixels.</param>
            <param name="color">The color of the rectangle.</param>
            <returns />
        </member>
        <member name="M:IVSDKDotNet.IVBaseDC.Add">
            <summary>
Undocumented.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVAudRadioAudioEntity.CurrentRadioStationIndex">
            <summary>
Gets or sets the index of the current radio station.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVAudEngine.SetUnknown(System.Single)">
            <summary>
This is used after every category patch, but the parameter is 1 in ep2 and 0 in the rest.
</summary>
            <param name="unk1">Unknown. 1 in ep2 and 0 in the rest.</param>
        </member>
        <member name="M:IVSDKDotNet.IVAudConfig.GetUIntPtr">
            <summary>
Gets the managed UIntPtr from the native pointer.
</summary>
            <returns>The managed UIntPtr from the native pointer</returns>
        </member>
        <member name="M:IVSDKDotNet.IVAudConfig.LoadFromFile(System.String)">
            <summary>
Undocumented.
</summary>
            <param name="path">The path to the file to load the audio config from?</param>
        </member>
        <member name="M:IVSDKDotNet.IVDraw.CalculateAspectRatio(System.Boolean)">
            <summary />
            <param name="bUnk">True forces it to 1.777... if ForceHudWidescreen bool is non-zero</param>
            <returns />
        </member>
        <member name="P:IVSDKDotNet.IVDraw.RenderPhases">
            <summary>
Use with: IVRenderPhases.FromUIntPtr(...);
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVDraw.GlobalScene">
            <summary>
Use with: IVGlobalScene.FromUIntPtr(...);
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVShadows.RenderCorona(System.Int32,System.Drawing.Color,System.Single,System.Numerics.Vector3,System.Single,System.Single,System.Single,System.Int32,System.Single,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,System.Int32)">
            <summary>
Renders a corona. This function will probably be moved somewhere else in the future!
</summary>
            <param name="id">The id of the corona.</param>
            <param name="color">The color of the corona.</param>
            <param name="a5">Unk.</param>
            <param name="pos">The position of where to place the corona.</param>
            <param name="range">The size of the corona.</param>
            <param name="a8">Unk.</param>
            <param name="a9">Unk.</param>
            <param name="a10">Unk.</param>
            <param name="a11">Unk.</param>
            <param name="a12">Unk.</param>
            <param name="a13">Unk.</param>
            <param name="a14">Unk.</param>
        </member>
        <member name="M:IVSDKDotNet.IVShadows.StoreStaticShadow(System.Boolean,System.Numerics.Vector3,System.Drawing.Color,System.Single,System.Single)">
            <summary>
StoreStaticShadows method with basic parameters. This internally calls the AddSceneLight function.
</summary>
            <param name="castShadows">Should light cast shadows?</param>
            <param name="vPos">The position of the light.</param>
            <param name="vColor">The color of the light.</param>
            <param name="fIntensity">Light Intensity.</param>
            <param name="fRange">Light Range.</param>
        </member>
        <member name="M:IVSDKDotNet.IVShadows.StoreStaticShadow(System.Boolean,System.Numerics.Vector3,System.Drawing.Color,System.Single,System.Single,System.UInt32)">
            <summary>
StoreStaticShadows method with basic parameters. This internally calls the AddSceneLight function.
</summary>
            <param name="castShadows">Should light cast shadows?</param>
            <param name="vPos">The position of the light.</param>
            <param name="vColor">The color of the light.</param>
            <param name="fIntensity">Light Intensity.</param>
            <param name="fRange">Light Range.</param>
            <param name="nID">Used by shadow system to track scene lights - 0 if no shadows and tracking.</param>
        </member>
        <member name="M:IVSDKDotNet.IVShadows.AddSceneLight(System.UInt32,System.UInt32,System.UInt32,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Drawing.Color,System.Single,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.UInt32,System.UInt32)">
            <summary>
Adds a light to the scene!
</summary>
            <param name="a1">Unknown.</param>
            <param name="nLightType">The type of the light.</param>
            <param name="nFlags">The light flags.</param>
            <param name="vDir">The light direction.</param>
            <param name="vTanDir">The light tangent direction.</param>
            <param name="vPos">The light position.</param>
            <param name="vColor">The light color.</param>
            <param name="fIntensity">The light intensity.</param>
            <param name="txdSlot">The slot the texture is in.</param>
            <param name="texHash">The texture hash within the given slot.</param>
            <param name="fRange">The light range.</param>
            <param name="fInnerConeAngle">The volume inner cone angle.</param>
            <param name="fOuterConeAngle">The volume outer cone angle.</param>
            <param name="fVolIntensity">The volume intensity (brightness).</param>
            <param name="fVolSizeScale">The volume radius scale (1.0f means the same radius as the light).</param>
            <param name="interiorId">If you want the light to work in an interior, this needs to be set to the current interior the char is in. Use the GET_INTERIOR_FROM_CHAR native to get the interior.</param>
            <param name="a15">Unknown.</param>
            <param name="nID">Used by shadow system to track scene lights - 0 if no shadows and tracking.</param>
        </member>
        <member name="P:IVSDKDotNet.IVVisibilityPlugins.StipplePath">
            <summary>
Gets or sets the path to where the stipple.wtd file is located.
Default: platform:/textures
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVisibilityPlugins.PedLodDistanceSlod">
            <summary>
All non-mission peds change their modelindex to superlod past this distance.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVGame.GetRadarRectangle">
            <summary>
Gets the rectangle of the radar in pixel.
</summary>
            <returns>The rectangle of the radar.</returns>
        </member>
        <member name="M:IVSDKDotNet.IVGame.GetRadarRectangle(IVSDKDotNet.Enums.eFontScaling)">
            <summary>
Gets the rectangle of the radar with the specific scaling.
</summary>
            <param name="scaling">The scaling to apply.</param>
            <returns>The rectangle of the radar.</returns>
        </member>
        <member name="M:IVSDKDotNet.IVGame.ShowSubtitleMessage(System.String)">
            <summary>
Shows text at the bottom center of the screen where the subtitles are located.
Only works in-game.
</summary>
            <param name="str">The text to be shown.</param>
        </member>
        <member name="M:IVSDKDotNet.IVGame.ShowSubtitleMessage(System.String,System.UInt32)">
            <summary>
Shows text at the bottom center of the screen where the subtitles are located.
Only works in-game.
</summary>
            <param name="str">The text to be shown.</param>
            <param name="time">How long the text should be shown in milliseconds.</param>
        </member>
        <member name="M:IVSDKDotNet.IVGame.ShowSubtitleMessageEx(System.String,System.Object[])">
            <summary>
Shows text at the bottom center of the screen where the subtitles are located.
Only works in-game.
</summary>
            <param name="str">The text to be shown.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="M:IVSDKDotNet.IVGame.IsKeyPressed(System.Windows.Forms.Keys)">
            <summary>
Checks if the specified key is pressed.
</summary>
            <param name="key">The key to check if it's pressed.</param>
            <returns>True if the key is pressed, otherwise false.</returns>
        </member>
        <member name="M:IVSDKDotNet.IVGame.IsInFocus">
            <summary>
Gets if the GTA IV main window is currently in focus.
</summary>
            <returns>True if GTA IV is currently in focus. Otherwise, false.</returns>
        </member>
        <member name="M:IVSDKDotNet.IVGame.Initialise(System.String)">
            <summary>
Undocumented.
</summary>
            <param name="sGameDat">Path to the gta.dat file?</param>
            <returns>True if initialization was successful? Otherwise, false.</returns>
        </member>
        <member name="P:IVSDKDotNet.IVGame.Bounds">
            <summary>
Gets the bounds of the GTA IV window.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVGame.Resolution">
            <summary>
Gets the resolution of the GTA IV window.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVGame.GameStartupPath">
            <summary>
Gets the absolute path to where GTA IV got started.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVGame.GameVersion">
            <summary>
Gets the current version of GTA IV.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVGame.CurrentEpisodeMenu">
            <summary>
Gets or sets the current episode menu.
Used for switching hudcolor in each episode's menu screen and for loading the right episode when you hit play.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVGame.CurrentEpisode">
            <summary>
Gets or sets the current episode.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVGame.GameFile">
            <summary>
common:/data/gta.dat
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVGame.Console.ExecuteCommand(System.String)">
            <summary>
Executes a command registered in the IV-SDK .NET console by its name.
</summary>
            <param name="name">The name of this command.</param>
            <returns>True if the command got registered. False if the command does not exists, or if the given name is null or whitespace.</returns>
        </member>
        <member name="M:IVSDKDotNet.IVGame.Console.RegisterCommand(IVSDKDotNet.Script,System.String,System.Action`1{System.String[]})">
            <summary>
Registers a new console command that you can execute by its name in the IV-SDK .NET console.
</summary>
            <param name="addFor">The script the console command belongs to.</param>
            <param name="name">The name of this command. (Name is not case sensitive)</param>
            <param name="actionToExecute">The action that should be executed if the command gets executed.</param>
            <returns>True if the command got registered. False if the command already exists, or if the given name is null or whitespace.</returns>
        </member>
        <member name="M:IVSDKDotNet.IVGame.Console.PrintErrorEx(System.String,System.Object[])">
            <summary>
Prints an error to the console.
</summary>
            <param name="str">The string you want to print to the console.</param>
            <param name="args">The objects to format.</param>
        </member>
        <member name="M:IVSDKDotNet.IVGame.Console.PrintError(System.String)">
            <summary>
Prints an error to the console.
</summary>
            <param name="str">The string you want to print to the console.</param>
        </member>
        <member name="M:IVSDKDotNet.IVGame.Console.PrintWarningEx(System.String,System.Object[])">
            <summary>
Prints a warning to the console.
</summary>
            <param name="str">The string you want to print to the console.</param>
            <param name="args">The objects to format.</param>
        </member>
        <member name="M:IVSDKDotNet.IVGame.Console.PrintWarning(System.String)">
            <summary>
Prints a warning to the console.
</summary>
            <param name="str">The string you want to print to the console.</param>
        </member>
        <member name="M:IVSDKDotNet.IVGame.Console.PrintDebugEx(System.String,System.Object[])">
            <summary>
ONLY AVAILABLE IN DEBUG MODE! Prints a string to the console with the debug colours.
</summary>
            <param name="str">The string you want to print to the console.</param>
            <param name="args">The objects to format.</param>
        </member>
        <member name="M:IVSDKDotNet.IVGame.Console.PrintDebug(System.String)">
            <summary>
ONLY AVAILABLE IN DEBUG MODE! Prints a string to the console with the debug colours.
</summary>
            <param name="str">The string you want to print to the console.</param>
        </member>
        <member name="M:IVSDKDotNet.IVGame.Console.PrintEx(System.String,System.Object[])">
            <summary>
Prints a string to the console with the default colour.
</summary>
            <param name="str">The string you want to print to the console.</param>
            <param name="args">The objects to format.</param>
        </member>
        <member name="M:IVSDKDotNet.IVGame.Console.Print(System.String)">
            <summary>
Prints a string to the console with the default colour.
</summary>
            <param name="str">The string you want to print to the console.</param>
        </member>
        <member name="M:IVSDKDotNet.IVGame.Console.Clear">
            <summary>
Clears everything in the IV-SDK .NET console.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVGame.Console.Close">
            <summary>
Closes the IV-SDK .NET console.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVGame.Console.Open">
            <summary>
Opens the IV-SDK .NET console.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVGame.Console.IsConsoleOpen">
            <summary>
Gets if the IV-SDK .NET console is currently open.
</summary>
        </member>
        <member name="T:IVSDKDotNet.IVGame.Console">
            <summary>
Gives you access to some functions of the IV-SDK .NET console.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVFileLoader.LoadLevel(System.String,System.Int32)">
            <summary>
Undocumented.
</summary>
            <param name="levelName" />
            <param name="nUnk">Priority? It's set to 2 and 1 for loading default.dat in TBoGT but 0 everywhere else.</param>
        </member>
        <member name="P:IVSDKDotNet.IVFileLoader.StreamIniPath">
            <summary>
platform:/stream.ini
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVFileLoader.ProceduralDatPath">
            <summary>
common:/data/materials
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVFileLoader.ButtonsTxdPath">
            <summary>
platform:/textures/buttons_360
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVFileLoader.ScenariosDatPath">
            <summary>
common:/DATA/Scenarios.dat
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVFileLoader.GameRpfPath">
            <summary>
platform:/data/game.rpf
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVFileLoader.AmbientDataPath">
            <summary>
common:/DATA/Ambient.dat
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVStreaming.GetPlayerPackfile">
            <summary>
Use with: IVFiPackfile.FromUIntPtr(...);
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVStreaming.ScriptRequestModel(System.Int32)">
            <summary>
Requests a model with the given hash. This is easier to use until 'RequestModel' is fully documented.
</summary>
            <param name="nHash">The model hash to request.</param>
        </member>
        <member name="M:IVSDKDotNet.IVStreaming.ScriptRequestModel(System.Int32,System.UIntPtr)">
            <summary>
Requests a model with the given hash. This is easier to use until 'RequestModel' is fully documented.
</summary>
            <param name="nHash">The model hash to request.</param>
            <param name="pRunningThread">Undocumented.</param>
        </member>
        <member name="M:IVSDKDotNet.IVPhInstGta.DetachFragmentGroup(System.UInt32)">
            <summary>
This is what's used to detach car parts, groupId is in the same order as groups are in the .oft file.
Use IVDoor.GroupID for vehicle doors, haven't found a way to see the rest of the bones, or anything for other entity types other than guessing.
</summary>
            <param name="groupId">The fragment group id to detach.</param>
            <returns>The detached fragment group?</returns>
        </member>
        <member name="M:IVSDKDotNet.IVModelInfo.GetModelInfoFromIndex(System.Int32)">
            <summary>
If you have the index from the model info that you want to get, you can use this function here to get the "IVBaseModelInfo" instance instead of using the "ModelInfos" array (Which would be slower as its creating garbage collections).
</summary>
            <param name="index">The index between 0 and 31000.</param>
            <returns>If found, the "IVBaseModelInfo" instance is returned.</returns>
        </member>
        <member name="M:IVSDKDotNet.IVModelInfo.GetIndexFromHashKey(System.UInt32)">
            <summary>
Returns the same as the "index" out-parameter of the "GetModelInfo" function would, but this creates no garbage collection allocations.
</summary>
            <param name="hashKey">The hash key to get the index from.</param>
            <returns>The index from the given hask key. Returns -1 if the index could not be found or if the given hash key is invalid.</returns>
        </member>
        <member name="M:IVSDKDotNet.IVVehicleModelInfo.SetHandlingParams(IVSDKDotNet.IVHandlingData,System.Numerics.Vector3)">
            <summary>
Sets the center of mass and mass in the phBound based on the center of mass param and fMass off handling.
</summary>
            <param name="pHandling" />
            <param name="pCenterOfMass" />
        </member>
        <member name="P:IVSDKDotNet.IVBaseModelInfo.FragType">
            <summary>
Use with: IVGtaFragType.FromUIntPtr(...);
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVBaseModelInfo.Archetype">
            <summary>
Use with: IVPhArchetypeGta.FromUIntPtr(...);
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicle.VehicleFragInst">
            <summary>
Use with: IVPhInstGta.FromUIntPtr(...);
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleAutomobileFlags.NotDamagedUpsideDown">
            <summary>
Not used.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel.RotationZ">
            <summary>
Rotation in z-axis.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel._f138">
            <summary>
Related to wheel steering.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel._f134">
            <summary>
Brake mult?
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel._f11c">
            <summary>
Always -1.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel._f110">
            <summary>
Has to do with suspension. 0 if the wheel is in the air.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel._f10c">
            <summary>
Has to do with suspension. 0 if the wheel is in the air.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel._f108">
            <summary>
Has to do with suspension. 0 if the wheel is in the air.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel._ff8">
            <summary>
Has to do with suspension. 0 if the wheel is in the air.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel._ff4">
            <summary>
Has to do with suspension. 0 if the wheel is in the air.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel._ff0">
            <summary>
Has to do with suspension. 0 if the wheel is in the air.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel._f88">
            <summary>
Has to do with wheel speed.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel.Speed2">
            <summary>
Duplicate.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel._f78">
            <summary>
z position? y angle?
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel._f50">
            <summary>
Duplicates position.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel._f28">
            <summary>
Same values ​​for l and r wheels.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel._f24">
            <summary>
Has to do with suspension or wheel stability.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel._f20">
            <summary>
Z for suspension?
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel._f1c">
            <summary>
CurvedEdges unk_F?
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel._f18">
            <summary>
Same values ​​for l and r wheels.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel.Margin">
            <summary>
Margin or AABB * 2.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel.DiscRadius">
            <summary>
From veh.ide.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel.GroupID">
            <summary>
Group for detach, needs to be higher than 0.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheel.BoneID">
            <summary>
In the order from IVVehicleStruct.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheelFlags.ScaleWheelByCollision">
            <summary>
For example, the rear wheel airtug is larger than the front.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheelFlags.LeftWheelSuspension">
            <summary>
False for wheels that have an axle (transmission_f, transmission_r or transmission_m).
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheelFlags.RightWheelSuspension">
            <summary>
False for wheels that have an axle (transmission_f, transmission_r or transmission_m).
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheelFlags.IsRearWheel">
            <summary>
This can make a double track for the front wheel and turn it off for the rear. Also if == false the handbrake for this wheel does not work
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheelFlags.NotInAir">
            <summary>
False if in air.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleWheelFlags.SpringsAreActive">
            <summary>
False if in air.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleDoor._f13">
            <summary>
Door is moved?
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleDoor._f11">
            <summary>
1 = closed, 4 = open?
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleDoor.m_nGroupID">
            <summary>
Group for detach, needs to be higher than 0.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVVehicleDoor.m_nBoneID">
            <summary>
In the order from IVVehicleStruct.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV.MainViewport">
            <summary>
Gets the main Viewport of ImGui.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV.FullWidth">
            <summary>
Can be passed to ImGui Widgets so that they use the full width available. Uses the 'FloatMin' property for the Vector2's 'X' value.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV.ActiveScriptWindows">
            <summary>
Gets the number of active script windows..
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV.FloatMin">
            <summary>
Min normalized positive value.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV.ForceCursor">
            <summary>
Gets or sets if the cursor is currently forced to be drawn on screen.
</summary>
        </member>
        <member name="M:IVSDKDotNet.ImTexture.GetHeight">
            <summary>
Gets the height of this texture.
</summary>
            <returns>The height of this texture.</returns>
        </member>
        <member name="M:IVSDKDotNet.ImTexture.GetWidth">
            <summary>
Gets the width of this texture.
</summary>
            <returns>The width of this texture.</returns>
        </member>
        <member name="M:IVSDKDotNet.ImTexture.GetAspectRatio">
            <summary>
Gets the aspect ratio of this texture.
</summary>
            <returns>The aspect ratio of this texture.</returns>
        </member>
        <member name="M:IVSDKDotNet.ImTexture.GetSize">
            <summary>
Gets the complete size of this texture.
</summary>
            <returns>The size of this texture.</returns>
        </member>
        <member name="M:IVSDKDotNet.ImTexture.GetTexture">
            <summary>
Gets the pointer to the texture which can be passed to some ImGuiIV functions.
</summary>
            <returns>The texture pointer.</returns>
        </member>
        <member name="M:IVSDKDotNet.ImTexture.Release">
            <summary>
Tries to release this texture.
</summary>
            <returns>true if successful. Otherwise false.</returns>
        </member>
        <member name="P:IVSDKDotNet.ImTexture.IsValid">
            <summary>
Gets if this texture is still valid.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_IO.IsValid">
            <summary>
Gets if this struct contains valid data.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_IO.ImGuiIOPtr">
            <summary>
Native Pointer to the ImGuiIO structure.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_InputTextState.ReloadSelectionStart">
            <summary>
POSITIONS ARE IN IMWCHAR units *NOT* UTF-8 this is why this is not exposed yet.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_InputTextState.ReloadUserBuf">
            <summary>
Force a reload of user buf so it may be modified externally. may be automatic in future version.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_InputTextState.Flags">
            <summary>
Copy of InputText() flags. may be used to check if e.g. ImGuiInputTextFlags_Password is set.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_InputTextState.Edited">
            <summary>
Edited this frame.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_InputTextState.SelectedAllMouseLock">
            <summary>
After a double-click to select all, we ignore further mouse drags to update selection.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_InputTextState.CursorFollow">
            <summary>
Set when we want scrolling to follow the current cursor position (not always!).
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_InputTextState.CursorAnim">
            <summary>
Timer for cursor blink, reset on every user action so the cursor reappears immediately.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_InputTextState.ScrollX">
            <summary>
Widget id owning the text state.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_InputTextState.ID">
            <summary>
Widget id owning the text state.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_InputTextState.IsValid">
            <summary>
Gets if this struct contains valid data.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_InputTextState.ImGuiInputTextStatePtr">
            <summary>
Native Pointer to the ImGuiInputTextState structure.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Payload.IsValid">
            <summary>
Gets if this struct contains valid data.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Payload.ImGuiPayloadPtr">
            <summary>
Native Pointer to the ImGuiPayload structure.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.HoverFlagsForTooltipNav">
            <summary>
Default flags when using IsItemHovered(ImGuiHoveredFlags_ForTooltip) or BeginItemTooltip()/SetItemTooltip() while using keyboard/gamepad.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.HoverFlagsForTooltipMouse">
            <summary>
Default flags when using IsItemHovered(ImGuiHoveredFlags_ForTooltip) or BeginItemTooltip()/SetItemTooltip() while using mouse.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.HoverDelayNormal">
            <summary>
Delay for IsItemHovered(ImGuiHoveredFlags_DelayNormal).
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.HoverDelayShort">
            <summary>
Delay for IsItemHovered(ImGuiHoveredFlags_DelayShort). Usually used along with HoverStationaryDelay.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.HoverStationaryDelay">
            <summary>
Delay for IsItemHovered(ImGuiHoveredFlags_Stationary). Time required to consider mouse stationary.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.CircleTessellationMaxError">
            <summary>
Maximum error (in pixels) allowed when using AddCircle()/AddCircleFilled() or drawing rounded corner rectangles with no explicit segment count specified. Decrease for higher quality but more geometry.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.CurveTessellationTol">
            <summary>
Tessellation tolerance when using PathBezierCurveTo() without a specific number of segments. Decrease for highly tessellated curves (higher quality, more polygons), increase to reduce quality.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.AntiAliasedFill">
            <summary>
Enable anti-aliased edges around filled shapes (rounded rectangles, circles, etc.). Disable if you are really tight on CPU/GPU. Latched at the beginning of the frame (copied to ImDrawList).
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.AntiAliasedLinesUseTex">
            <summary>
Enable anti-aliased lines/borders using textures where possible. Require backend to render with bilinear filtering (NOT point/nearest filtering). Latched at the beginning of the frame (copied to ImDrawList).
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.AntiAliasedLines">
            <summary>
Enable anti-aliased lines/borders. Disable if you are really tight on CPU/GPU. Latched at the beginning of the frame (copied to ImDrawList).
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.MouseCursorScale">
            <summary>
Scale software rendered mouse cursor (when io.MouseDrawCursor is enabled). We apply per-monitor DPI scaling over this scale. May be removed later.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.DockingSeparatorSize">
            <summary>
Thickness of resizing border between docked windows
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.DisplaySafeAreaPadding">
            <summary>
If you cannot see the edges of your screen (e.g. on a TV) increase the safe area padding. Apply to popups/tooltips as well regular windows. NB: Prefer configuring your TV sets correctly!
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.DisplayWindowPadding">
            <summary>
Window position are clamped to be visible within the display area or monitors by at least this amount. Only applies to regular windows.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.SeparatorTextPadding">
            <summary>
Horizontal offset of text from each edge of the separator + spacing on other axis. Generally small values. .y is recommended to be == FramePadding.y.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.SeparatorTextAlign">
            <summary>
Alignment of text within the separator. Defaults to (0.0f, 0.5f) (left aligned, center).
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.SeparatorTextBorderSize">
            <summary>
Thickkness of border in SeparatorText()
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.SelectableTextAlign">
            <summary>
Alignment of selectable text. Defaults to (0.0f, 0.0f) (top-left aligned). It's generally important to keep this left-aligned if you want to lay multiple items on a same line.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.ButtonTextAlign">
            <summary>
Alignment of button text when button is larger than text. Defaults to (0.5f, 0.5f) (centered).
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.ColorButtonPosition">
            <summary>
Side of the color button in the ColorEdit4 widget (left/right). Defaults to ImGuiDir_Right.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.TableAngledHeadersAngle">
            <summary>
Angle of angled headers (supported values range from -50.0f degrees to +50.0f degrees).
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.TabBarBorderSize">
            <summary>
Thickness of tab-bar separator, which takes on the tab active color to denote focus.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.TabMinWidthForCloseButton">
            <summary>
Minimum width for close button to appear on an unselected tab when hovered. Set to 0.0f to always show when hovering, set to FLT_MAX to never show close button unless selected.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.TabBorderSize">
            <summary>
Thickness of border around tabs.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.TabRounding">
            <summary>
Radius of upper corners of a tab. Set to 0.0f to have rectangular tabs.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.LogSliderDeadzone">
            <summary>
The size in pixels of the dead-zone around zero on logarithmic sliders that cross zero.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.GrabRounding">
            <summary>
Radius of grabs corners rounding. Set to 0.0f to have rectangular slider grabs.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.GrabMinSize">
            <summary>
Minimum width/height of a grab box for slider/scrollbar.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.ScrollbarRounding">
            <summary>
Radius of grab corners for scrollbar.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.ScrollbarSize">
            <summary>
Width of the vertical scrollbar, Height of the horizontal scrollbar.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.ColumnsMinSpacing">
            <summary>
Minimum horizontal spacing between two columns. Preferably &gt; (FramePadding.x + 1).
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.IndentSpacing">
            <summary>
Horizontal indentation when e.g. entering a tree node. Generally == (FontSize + FramePadding.x*2).
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.TouchExtraPadding">
            <summary>
Expand reactive bounding box for touch-based system where touch position is not accurate enough. Unfortunately we don't sort widgets so priority on overlap will always be given to the first widget. So don't grow this too much!
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.CellPadding">
            <summary>
Padding within a table cell. CellPadding.y may be altered between different rows.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.ItemInnerSpacing">
            <summary>
Horizontal and vertical spacing between within elements of a composed widget (e.g. a slider and its label).
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.ItemSpacing">
            <summary>
Horizontal and vertical spacing between widgets/lines.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.FrameBorderSize">
            <summary>
Thickness of border around frames. Generally set to 0.0f or 1.0f. (Other values are not well tested and more CPU/GPU costly).
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.FrameRounding">
            <summary>
Radius of frame corners rounding. Set to 0.0f to have rectangular frame (used by most widgets).
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.FramePadding">
            <summary>
Padding within a framed rectangle (used by most widgets).
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.PopupBorderSize">
            <summary>
Thickness of border around popup/tooltip windows. Generally set to 0.0f or 1.0f. (Other values are not well tested and more CPU/GPU costly).
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.PopupRounding">
            <summary>
Radius of popup window corners rounding. (Note that tooltip windows use WindowRounding)
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.ChildBorderSize">
            <summary>
Thickness of border around child windows. Generally set to 0.0f or 1.0f. (Other values are not well tested and more CPU/GPU costly).
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.ChildRounding">
            <summary>
Radius of child window corners rounding. Set to 0.0f to have rectangular windows.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.WindowMenuButtonPosition">
            <summary>
Side of the collapsing/docking button in the title bar (None/Left/Right). Defaults to ImGuiDir_Left.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.WindowTitleAlign">
            <summary>
Alignment for title bar text. Defaults to (0.0f,0.5f) for left-aligned,vertically centered.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.WindowMinSize">
            <summary>
Minimum window size. This is a global setting. If you want to constrain individual windows, use SetNextWindowSizeConstraints().
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.WindowBorderSize">
            <summary>
Thickness of border around windows. Generally set to 0.0f or 1.0f. (Other values are not well tested and more CPU/GPU costly).
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.WindowRounding">
            <summary>
Radius of window corners rounding. Set to 0.0f to have rectangular windows. Large values tend to lead to variety of artifacts and are not recommended.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.WindowPadding">
            <summary>
Padding within a window.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.DisabledAlpha">
            <summary>
Additional alpha multiplier applied by BeginDisabled(). Multiply over current value of Alpha.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.Alpha">
            <summary>
Global alpha applies to everything in Dear ImGui.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.IsValid">
            <summary>
Gets if this struct contains valid data.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Style.ImGuiStylePtr">
            <summary>
Native Pointer to the ImGuiStyle structure.
</summary>
        </member>
        <member name="M:IVSDKDotNet.ImGuiIV_Viewport.GetWorkCenter">
            <summary>
Gets the center position of the work Area.
</summary>
            <returns>The center position of the work Area.</returns>
        </member>
        <member name="M:IVSDKDotNet.ImGuiIV_Viewport.GetCenter">
            <summary>
Gets the center position of the main Area.
</summary>
            <returns>The center position of the main Area.</returns>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Viewport.WorkSize">
            <summary>
Work Area: Size of the viewport minus task bars, menu bars, status bars (smaller then Size).
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Viewport.WorkPos">
            <summary>
Work Area: Position of the viewport minus task bars, menus bars, status bars (bigger then Pos).
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Viewport.Size">
            <summary>
Main Area: Size of the viewport.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Viewport.Pos">
            <summary>
Main Area: Position of the viewport (Dear ImGui coordinates are the same as OS desktop/native coordinates).
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Viewport.IsValid">
            <summary>
Gets if this struct contains valid data.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_Viewport.ImGuiViewportPtr">
            <summary>
Native Pointer to the ImGuiViewport structure.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVTaskComplexClimbLadder.Create(IVSDKDotNet.IVObject,System.Int32,System.UInt32)">
            <summary>
Creates a new climb ladder task.
</summary>
            <param name="ladder">The target ladder to climb.</param>
            <param name="type">Not quite sure what this does.</param>
            <param name="unk0">0 = Only get on the ladder, 1 = Get on and climb, 2 = Get on and climb fast</param>
            <returns />
        </member>
        <member name="M:IVSDKDotNet.IVTask.GetTaskType">
            <summary>
Gets the type of this Task. Check out the "eTask" enum for all types.
</summary>
            <returns>The type of this Task.</returns>
        </member>
        <member name="M:IVSDKDotNet.IVTask.IsSimple">
            <summary>
Gets if this is a simple, or a complex task.
</summary>
            <returns>true if this is a simple task. Otherwise, false for a complex task.</returns>
        </member>
        <member name="P:IVSDKDotNet.IVPhoneInfo._f22C">
            <summary>
The name of the caller? A gxt entry maybe?
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVPhoneInfo._f21C">
            <summary>
In GTA IV, this returns "NIKO", in TLaD it returns "JOHNNY" and in TBoGT it returns "LUIS".
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVPhoneInfo.CurrentNumberInput">
            <summary>
The currently entered phone number.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVPhoneInfo._f1F8">
            <summary>
1 when calling.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVPhoneInfo.Ringtype">
            <summary>
Selected ringtype.
4 = Ring/Vibrate, 0 = Ring, 3 = Vibrate, 1 = Quiet and 2 = Silent
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVPhoneInfo.RingtoneID">
            <summary>
Selected ringtone id.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVPhoneInfo._f1B8">
            <summary>
56 when calling a custom number, and 1 when calling a number from the phonebook.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVPhoneInfo._f1B0">
            <summary>
1 when calling.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVPhoneInfo._f188">
            <summary>
Has to be the Y offset.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVPhoneInfo._f180">
            <summary>
Always 1000?
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVPhoneInfo.State">
            <summary>
Current phone state like in which phone menu you currently are or if you are calling someone.
0 to 29 is the selected game mode when starting a new multiplayer match via the phone.
See ePhoneState enum for possible states.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVPool.GetFromType(IVSDKDotNet.Enums.ePool)">
            <summary>
Gets a IVPool object from the given type.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVPool.IsValid(System.Int32)">
            <summary>
Checks if the object at the given slot is valid.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVPool.New">
            <summary>
I assume this allocates a new object in this pool.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVPool.GetIndex(System.UIntPtr)">
            <summary>
Gets the handle of an object.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVPool.GetAt(System.UInt32)">
            <summary>
Gets a pointer to an object from this handle.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVPool.Get(System.Int32)">
            <summary>
Gets a pointer to an object from this slot in the pool.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVObject.Scale">
            <summary>
This is set by SET_OBJECT_SCALE but unused.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVPhysical.GetConstrainedCollider">
            <summary>
Use with: IVPhConstrainedCollider.FromUIntPtr(...);
</summary>
            <returns />
        </member>
        <member name="M:IVSDKDotNet.IVDynamicEntity.GetBoneMatrix2(System.Int32)">
            <summary>
Used for transform modifications e.g. popup lights, firetruck/apc cannon but 1:1 identical to the other function.
</summary>
            <param name="boneID">The id of the bone to get the matrix from.</param>
            <returns>The bone matrix.</returns>
        </member>
        <member name="M:IVSDKDotNet.IVDynamicEntity.GetBoneMatrix(System.Int32)">
            <summary>
Used for reading bone positions e.g. seat locations.
</summary>
            <param name="boneID">The id of the bone to get the matrix from.</param>
            <returns>The bone matrix.</returns>
        </member>
        <member name="P:IVSDKDotNet.IVDynamicEntity.Anim">
            <summary>
Undocumented.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVEntity.InstGta">
            <summary>
Use with: IVPhInstGta.FromUIntPtr(...);
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVWorld.ProcessLineOfSight(System.Numerics.Vector3,System.Numerics.Vector3,IVSDKDotNet.IVLineOfSightResults@,System.UInt32)">
            <summary>
ProcessLineOfSight function with basic parameters.
</summary>
            <param name="source">Source position of the check.</param>
            <param name="target">Target position of the check.</param>
            <param name="pResults">Returns the line of sight results if the function succeeded.</param>
            <param name="nSeeThroughShootThrough">1 -&gt; Do see through check. 2 -&gt; Do shoot through check</param>
            <returns>True if the processing was successful. False if not.</returns>
        </member>
        <member name="M:IVSDKDotNet.IVWorld.ProcessLineOfSight(System.Numerics.Vector3,System.Numerics.Vector3,System.UIntPtr,IVSDKDotNet.IVLineOfSightResults@,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
ProcessLineOfSight function with extended parameters.
ZMenu uses IVWorld.ProcessLineOfSight(v, v2, 0, out IVLineOfSightResults ret, 142, 1, 0, 2, 4)
</summary>
            <param name="source">Source position of the check.</param>
            <param name="target">Target position of the check.</param>
            <param name="pUnk">Unknown.</param>
            <param name="pResults">Returns the line of sight results if the function succeeded.</param>
            <param name="nFlags">Unknown.</param>
            <param name="nUnk1">Unknown.</param>
            <param name="nUnk2">Unknown.</param>
            <param name="nSeeThroughShootThrough">1 -&gt; Do see through check. 2 -&gt; Do shoot through check.</param>
            <param name="nUnk4">Unknown.</param>
            <returns>True if the processing was successful. False if not.</returns>
        </member>
        <member name="P:IVSDKDotNet.IVLineOfSightResults.EndPosition">
            <summary>
Where the line of sight hit point ended up.
</summary>
        </member>
        <member name="P:IVSDKDotNet.IVLineOfSightResults.Inst">
            <summary>
IVPhInstGta pointer of hit entity.
Use with: IVPhInstGta.FromPointer(...);
</summary>
        </member>
        <member name="P:CLR.CLRBridge.Settings">
            <summary>
Gets the loaded IVSDKDotNet settings file.
</summary>
        </member>
        <member name="P:CLR.CLRBridge.IVSDKDotNetScriptsPath">
            <summary>
Gets the full path to the scripts folder inside the IVSDKDotNet directory.
</summary>
        </member>
        <member name="P:CLR.CLRBridge.IVSDKDotNetPluginsPath">
            <summary>
Gets the full path to the plugins folder inside the IVSDKDotNet directory.
</summary>
        </member>
        <member name="P:CLR.CLRBridge.IVSDKDotNetLogsPath">
            <summary>
Gets the full path to the logs folder inside the IVSDKDotNet directory.
</summary>
        </member>
        <member name="P:CLR.CLRBridge.IVSDKDotNetDataPath">
            <summary>
Gets the full path to the data folder inside the IVSDKDotNet directory.
</summary>
        </member>
        <member name="P:CLR.CLRBridge.IVSDKDotNetBinaryPath">
            <summary>
Gets the full path to the bin folder inside the IVSDKDotNet directory.
</summary>
        </member>
        <member name="P:CLR.CLRBridge.IVSDKDotNetPath">
            <summary>
Gets the full path to the IVSDKDotNet folder.
</summary>
        </member>
        <member name="P:CLR.CLRBridge.CurrentLogFileName">
            <summary>
Gets the current log file name for this session.
This will only get used when the setting 'CreateLogFilesInMainDirectory' is set to false.
Format: IVSDKDotNet@[DAY][MONTH][YEAR]@[MILLISECOND].log
</summary>
        </member>
        <member name="P:CLR.CLRBridge.Version">
            <summary>
Gets the current version of IV-SDK .NET
</summary>
        </member>
        <member name="P:CLR.CLRBridge.DisableInputs">
            <summary>
Will get set to true when any ImGui window is open and it wants text input.
</summary>
        </member>
        <member name="P:CLR.CLRBridge.DisableScriptHookDotNetLoading">
            <summary>
Will get set to true only if the IV-SDK .NET ScriptHookDotNet mod loader is activated AND the user installed the old ScriptHookDotNet to avoid conflicts.
</summary>
        </member>
        <member name="P:CLR.CLRBridge.IsShuttingDown">
            <summary>
Will get set to true when everything is about to shut down. 
</summary>
        </member>
        <member name="P:CLR.CLRBridge.CanTerminate">
            <summary>
Tells the IVSDKDotNet.asi that it can free its library and exit the thread. 
</summary>
        </member>
        <member name="P:CLR.CLRBridge.IsBridgeDisabled">
            <summary>
If set to true, communication between IVSDKDotNet.asi and IVSDKDotNetWrapper.dll is disabled.
This is usually only set to true if an error occured while trying to load the IV-SDK .NET Manager.
</summary>
        </member>
        <member name="T:CLR.CLRBridge">
            <summary>
The main bridge between IVSDKDotNet.asi and IVSDKDotNetWrapper.dll.
There can only be one instance of this class.
</summary>
        </member>
        <member name="M:IVSDKDotNet.Script.SendScriptCommand(System.String,System.String,System.Object[],System.Object@)">
            <summary>
Allows you to communicate with other scripts.
</summary>
            <param name="toScript">The name of the script to which the command should be send to.</param>
            <param name="command">The command to send to the script.</param>
            <param name="args">The arguments to send to the script with this command.</param>
            <param name="result">The object returned by the target script.</param>
            <returns>If successful, true is returned. Otherwise, false.</returns>
        </member>
        <member name="M:IVSDKDotNet.Script.SendScriptCommand(System.Guid,System.String,System.Object[],System.Object@)">
            <summary>
Allows you to communicate with other scripts.
</summary>
            <param name="toScript">The ID of the script to which the command should be send to.</param>
            <param name="command">The command to send to the script.</param>
            <param name="args">The arguments to send to the script with this command.</param>
            <param name="result">The object returned by the target script.</param>
            <returns>If successful, true is returned. Otherwise, false.</returns>
        </member>
        <member name="M:IVSDKDotNet.Script.SendScriptCommand(IVSDKDotNet.Script,System.String,System.Object[],System.Object@)">
            <summary>
Allows you to communicate with other scripts.
</summary>
            <param name="toScript">To which the script the command should be send to.</param>
            <param name="command">The command to send to the script.</param>
            <param name="args">The arguments to send to the script with this command.</param>
            <param name="result">The object returned by the target script.</param>
            <returns>If successful, true is returned. Otherwise, false.</returns>
        </member>
        <member name="M:IVSDKDotNet.Script.GetActiveScriptCount">
            <summary>
Gets how many active IV-SDK .NET / ScriptHookDotNet scripts there are.
</summary>
            <returns>The amount of currently active scripts.</returns>
        </member>
        <member name="M:IVSDKDotNet.Script.GetScript(System.String)">
            <summary>
Returns a script by its name if available.
</summary>
            <param name="name">The name of the script you want to get.</param>
            <returns>The script if found. Otherwise, null.</returns>
        </member>
        <member name="M:IVSDKDotNet.Script.GetScript(System.Guid)">
            <summary>
Returns a script by its id if available.
</summary>
            <param name="id">The id of the script you want to get.</param>
            <returns>The script if found. Otherwise, null.</returns>
        </member>
        <member name="M:IVSDKDotNet.Script.IsScriptRunning(System.String)">
            <summary>
Allows you to check if the script you are checking for is running.
</summary>
            <param name="name">The name of the script you want to check for.</param>
            <returns>True if the script is running. Otherwise, false.</returns>
        </member>
        <member name="M:IVSDKDotNet.Script.IsScriptRunning(System.Guid)">
            <summary>
Allows you to check if the script you are checking for is running.
</summary>
            <param name="id">The name of the script you want to check for.</param>
            <returns>True if the script is running. Otherwise, false.</returns>
        </member>
        <member name="M:IVSDKDotNet.Script.DoesScriptExists(System.String)">
            <summary>
Allows you to check if the script you are checking for exists.
</summary>
            <param name="name">The name of the script you want to check for.</param>
            <returns>True if the script exists. Otherwise, false.</returns>
        </member>
        <member name="M:IVSDKDotNet.Script.DoesScriptExists(System.Guid)">
            <summary>
Allows you to check if the script you are checking for exists.
</summary>
            <param name="id">The id of the script you want to check for.</param>
            <returns>True if the script exists. Otherwise, false.</returns>
        </member>
        <member name="M:IVSDKDotNet.Script.GetFullPath">
            <summary>
Return the absolute path of this script.
</summary>
            <returns>The absolute path of the script, or an empty string if the full path could not get retrieved.</returns>
        </member>
        <member name="M:IVSDKDotNet.Script.GetName">
            <summary>
Returns the name of this script.
</summary>
            <returns>The name of this script, or an empty string if the name could not get retrieved.</returns>
        </member>
        <member name="M:IVSDKDotNet.Script.UnregisterPhoneNumber(System.String)">
            <summary>
Unregisters a phone number.
</summary>
            <param name="number">The phone number to unregister.</param>
            <returns>True if the number got unregistered. Otherwise false.</returns>
        </member>
        <member name="M:IVSDKDotNet.Script.RegisterPhoneNumber(System.String,System.Action)">
            <summary>
Registers a phone number.
</summary>
            <param name="number">The phone number to unregister.</param>
            <param name="dialingAction">The action that will be executed when this number was dialed.</param>
            <returns>True if the number got registered. Otherwise false.</returns>
        </member>
        <member name="M:IVSDKDotNet.Script.RegisterConsoleCommand(System.String,System.Action`1{System.String[]})">
            <summary>
Registers a new console command that you can execute by its name in the IV-SDK .NET console.
</summary>
            <param name="name">The name of this command (Name is not case sensitive).</param>
            <param name="actionToExecute">The action that should be executed if the command gets executed.</param>
            <returns>True if the command got registered. False if the command already exists, or if the given name is null or whitespace.</returns>
        </member>
        <member name="M:IVSDKDotNet.Script.Abort">
            <summary>
Aborts this script.
<returns>True if the script got aborted. Otherwise, false.</returns></summary>
        </member>
        <member name="M:IVSDKDotNet.Script.IsKeyPressed(System.Windows.Forms.Keys)">
            <summary>
Checks if the specified key is pressed.
</summary>
            <param name="Key">: The key to check if it's pressed.</param>
            <returns>True if the key is pressed, otherwise false.</returns>
        </member>
        <member name="M:IVSDKDotNet.Script.ShowSubtitleMessage(System.String)">
            <summary>
Shows text at the bottom center of the screen where the subtitles are located for 2 seconds.
Only works in-game.
</summary>
            <param name="str">The text to be shown.</param>
        </member>
        <member name="M:IVSDKDotNet.Script.ShowSubtitleMessage(System.String,System.Object[])">
            <summary>
Shows text at the bottom center of the screen where the subtitles are located for 3 seconds.
Only works in-game.
</summary>
            <param name="str">The text to be shown.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
        </member>
        <member name="M:IVSDKDotNet.Script.ShowSubtitleMessage(System.String,System.UInt32)">
            <summary>
Shows text at the bottom center of the screen where the subtitles are located.
Only works in-game.
</summary>
            <param name="str">The text to be shown.</param>
            <param name="time">How long the text should be shown in milliseconds.</param>
        </member>
        <member name="M:IVSDKDotNet.Script.ChangeTimerInterval(System.Guid,System.Int32)">
            <summary>
Changes the interval of a timer.
</summary>
            <param name="id">The ID of the timer to change its interval.</param>
            <param name="interval">The new interval. Default is 100 milliseconds.</param>
        </member>
        <member name="M:IVSDKDotNet.Script.ChangeTimerState(System.Guid,System.Boolean)">
            <summary>
Changes the pause state of a timer.
</summary>
            <param name="id">The ID of the timer to change its pause state.</param>
            <param name="pause">Pause, or not pause.</param>
        </member>
        <member name="M:IVSDKDotNet.Script.AbortTaskOrTimer(System.Guid)">
            <summary>
Aborts a task or timer with the given id.
</summary>
            <param name="id">The ID of the task or timer to abort.</param>
        </member>
        <member name="M:IVSDKDotNet.Script.StartNewTimer(System.Int32,System.Action)">
            <summary>
Starts a new asynchronous Timer.
</summary>
            <param name="interval">The interval how fast the Timer should run.</param>
            <param name="actionToExecute">The action that should be executed each Timer Tick.</param>
            <returns>The Guid of the just created Timer which can be used to control the Timer. If Guid is empty then Timer could not get created.</returns>
        </member>
        <member name="M:IVSDKDotNet.Script.WaitInTask(System.Guid,System.Int32)">
            <summary>
Waits in the Task for the specified amount of time.
</summary>
            <param name="id">The ID of the Task.</param>
            <param name="waitTimeInMilliseconds">The time to wait in milliseconds.</param>
        </member>
        <member name="M:IVSDKDotNet.Script.StartNewTask(System.Func`1{System.Object},System.Action`1{System.Object})">
            <summary>
Starts a new asynchronous task.
</summary>
            <param name="funcToExecute">The function that should be executed.</param>
            <param name="continueWithAction">The action that should be executed when the given tasks function completed and is about to reach its end. The object parameter of this action is the data returned from the function.</param>
            <returns>The Guid of the just created Task which can be used to control the Task. If Guid is empty then Task could not get created.</returns>
        </member>
        <member name="M:IVSDKDotNet.Script.StartNewTask(System.Func`1{System.Object})">
            <summary>
Starts a new asynchronous task.
</summary>
            <param name="funcToExecute">The function that should be executed.</param>
            <returns>The Guid of the just created Task which can be used to control the Task. If Guid is empty then Task could not get created.</returns>
        </member>
        <member name="E:IVSDKDotNet.Script.OnImGuiRendering">
            <summary>
Gets raised every frame and allows you to draw stuff on the screen via the ImGuiIV_DrawingContext struct, or draw custom script windows using ImGui via the ImGuiIV wrapper class.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Script.OnFirstD3D9Frame">
            <summary>
Gets raised on the very first Direct3D9 Frame. You can use this to create Textures or Fonts.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Script.AssemblyResolve">
            <summary>
Gets raised when you set Script.AssembliesLocation to DecideManuallyForEachAssembly and an Assembly gets requested for this Script.
You need to return the absolut path of the reqested Assembly.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Script.ScriptCommandReceived">
            <summary>
Gets raised when another IV-SDK .NET Script has sent a command to this IV-SDK .NET Script. 
</summary>
        </member>
        <member name="E:IVSDKDotNet.Script.KeyDown">
            <summary>
Gets raised when a key was pressed.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Script.KeyUp">
            <summary>
Gets raised when a key was released.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Script.IngameStartup">
            <summary>
Gets raised right before loading a save, starting a new game, switching episodes, etc.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Script.ProcessPad">
            <summary>
Gets raised EVERYTIME even when in main menu.
You can set all pad controls here, called once per frame for each pad.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Script.ProcessAutomobile">
            <summary>
Gets raised after IVAutomobile.Process, overriding steer and pedals works here.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Script.ProcessCamera">
            <summary>
Gets raised after IVCamera.FinalCam has been written to.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Script.Drawing">
            <summary>
Gets raised twice per frame when in-game, and even works in main menu (CRenderPhasePostRenderViewport).
</summary>
        </member>
        <member name="E:IVSDKDotNet.Script.MountDevice">
            <summary>
Gets raised when game is loading, switching from one episode to another or when loading the same save game again.
Can be used for any rage.fiDevice stuff.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Script.GameLoadPriority">
            <summary>
Gets raised before GameLoad when game is loading or when switching from one episode to another.
Can be used for files that need to overwrite base game files.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Script.GameLoad">
            <summary>
Gets raised when game is loading or when switching from one episode to another.
Can be used for addon files that don't interfere with game files.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Script.WaitTick">
            <summary>
Gets raised every X milliseconds depending on what you set the WaitTickInterval property to (Default is 100ms).
This event will internally be called from the Tick event which means it uses the CTheScripts.SetDummyThread/RestorePreviousThread method.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Script.Tick">
            <summary>
Gets raised every frame when in-game (CGame.Process).
This event uses the CTheScripts.SetDummyThread/RestorePreviousThread method that means that any natives calls in this event will work just fine.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Script.Uninitialize">
            <summary>
Gets raised when the script is about to be unloaded so you can free some previously created stuff in here.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Script.Initialized">
            <summary>
Gets raised after the constructor so you can safely call any functions in here without having to worry about stuff not being initialized yet.
Native functions cannot be called in here yet.
</summary>
        </member>
        <member name="P:IVSDKDotNet.Script.WaitTickInterval">
            <summary>
Gets or sets the interval with which the WaitTick event should get raised. The default is 100ms and it cannot go below 1.
</summary>
        </member>
        <member name="P:IVSDKDotNet.Script.UseThreadedTick">
            <summary>
Gets if the Tick event of this script should be threaded. This can only be set on the scripts constructor overload.
<para>This will let you create while loops with wait calls without blocking the main thread.</para></summary>
        </member>
        <member name="P:IVSDKDotNet.Script.SaveSettingsOnUnload">
            <summary>
Gets or sets if the settings file of this script should be saved when this script unloads.
<para>When set to true, this will save the settings file of this script after the Uninitialized event was called.</para></summary>
        </member>
        <member name="P:IVSDKDotNet.Script.ForceNoAbort">
            <summary>
This makes it so the script is not able to be aborted* if all scripts are being aborted, making it act more like an ASI mod.
<para>It is recommended to leave this set to false, and should only be activated when you have a very specific usecase for it.</para><para>* The script is still able to be aborted when: </para><para>- It creates an exception which the IV-SDK .NET Manager catches.</para><para>- The user aborts the script manually via the IV-SDK .NET Manager.</para></summary>
        </member>
        <member name="P:IVSDKDotNet.Script.OnlyRaiseKeyEventsWhenInGame">
            <summary>
Gets or sets if the KeyDown and KeyUp events should only be raised when the player is actually in-game and not in main menu.
</summary>
        </member>
        <member name="P:IVSDKDotNet.Script.Settings">
            <summary>
The settings file of this script.
</summary>
        </member>
        <member name="P:IVSDKDotNet.Script.ScriptResourceFolder">
            <summary>
Gets or sets the resource folder for this Script where all the files required by this Script are located.
The folder has to be named the same name as your Script (without extension), and needs to be placed in the scripts folder.
The string will be null if the folder doesn't exist.
</summary>
        </member>
        <member name="P:IVSDKDotNet.Script.CustomAssembliesPath">
            <summary>
Gets or sets the custom Assemblies path for this Script if you have set the AssembliesLocation to Custom.
The path is relative to the root directory of GTA IV.
Example: IVSDKDotNet\scripts\AssembliesForMyEpicScript - The Assemblies for your Script will now be loaded from the AssembliesForMyEpicScript folder.
</summary>
        </member>
        <member name="P:IVSDKDotNet.Script.AssembliesLocation">
            <summary>
Gets or sets where the Assemblies are located for this script. Default: GameRootDirectory
</summary>
        </member>
        <member name="P:IVSDKDotNet.Script.IVLauncherWorkshopID">
            <summary>
If you uploaded your Modification to the IV Launchers Workshop, you can set the value of this property to the ID of the Modification in the Workshop.
</summary>
        </member>
        <member name="P:IVSDKDotNet.Script.ScriptDomain">
            <summary>
Gets the current AppDomain.
</summary>
        </member>
        <member name="P:IVSDKDotNet.Script.ID">
            <summary>
The unique ID of this script. This can only be set on the scripts constructor overload.
</summary>
        </member>
        <member name="T:IVSDKDotNet.Script">
            <summary>
Marks the class as a IV-SDK .NET Script.
This class needs to be inherited if you want this class to be the entry point of your IV-SDK .NET Script.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Native.Hooks.OnWaitCalled">
            <summary>Gets raised when the WAIT native was called.</summary>
        </member>
        <member name="E:IVSDKDotNet.Native.Hooks.PrintFloatHook">
            <summary>The PRINTFLOAT native is normally not functional and is supposed to log some debug stuff for e.g. missions.</summary>
        </member>
        <member name="E:IVSDKDotNet.Native.Hooks.PrintIntHook">
            <summary>The PRINTINT native is normally not functional and is supposed to log some debug stuff for e.g. missions.</summary>
        </member>
        <member name="E:IVSDKDotNet.Native.Hooks.PrintStringHook">
            <summary>The PRINTSTRING native is normally not functional and is supposed to log some debug stuff for e.g. missions.</summary>
        </member>
        <member name="T:IVSDKDotNet.Native.Hooks">
            <summary>
Some native function hooks which you can use to do stuff before a target native is called.
</summary>
        </member>
        <member name="M:IVSDKDotNet.Native.Function.Call(System.String,System.Object[])">
            <summary>
Calls a native function by name.
</summary>
            <param name="name">The name of the native function to call.</param>
            <param name="args">The arguments of the native function.</param>
        </member>
        <member name="M:IVSDKDotNet.Native.Function.Call``1(System.String,System.Object[])">
            <summary>
Calls a native function by name and returns the result the native returned.
</summary>
            <typeparam name="T">The return type of the native.</typeparam>
            <param name="name">The name of the native function to call.</param>
            <param name="args">The arguments of the native function.</param>
            <returns>The result of the called native function.</returns>
        </member>
        <member name="T:IVSDKDotNet.Native.Function">
            <summary>
This class gives you the possiblity to manually call native functions by their name.
</summary>
        </member>
        <member name="M:IVSDKDotNet.Native.Natives.DRAW_CORONA(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
Draws a corona in the world at the given position with the given radius.
</summary>
            <param name="x">The X coordinate of where to draw the corona.</param>
            <param name="y">The Y coordinate of where to draw the corona.</param>
            <param name="z">The Z coordinate of where to draw the corona.</param>
            <param name="radius">The size of the corona.</param>
            <param name="dummy1">Does nothing.</param>
            <param name="dummy2">Does nothing.</param>
            <param name="r">The R (Red) color value of the corona.</param>
            <param name="g">The G (Green) color value of the corona.</param>
            <param name="b">The B (Blue) color value of the corona.</param>
        </member>
        <member name="M:IVSDKDotNet.Native.Natives.DRAW_CORONA(System.Numerics.Vector3,System.Single,System.Int32,System.Single,System.Drawing.Color)">
            <summary>
Draws a corona in the world at the given position with the given radius.
</summary>
            <param name="pos">The position where to draw the corona.</param>
            <param name="radius">The size of the corona.</param>
            <param name="dummy1">Does nothing.</param>
            <param name="dummy2">Does nothing.</param>
            <param name="color">The color of the corona.</param>
        </member>
        <member name="T:IVSDKDotNet.Native.Natives">
            <summary>
GTA IV Native Functions.
Natives with an underscore at the beginning will likely crash the game.
If they crash the game, they might work if you do IVTheScripts.SetDummyThread(), then call the native, and then IVTheScripts.RestorePreviousThread().
</summary>
        </member>
        <member name="M:IVSDKDotNet.Native.IVNativeContext.Delete">
            <summary>
Deletes the allocated native context and frees its memory.
</summary>
        </member>
        <member name="M:IVSDKDotNet.Native.IVNativeContext.FromUIntPtr(System.UIntPtr)">
            <summary>
Creates a new IVNativeContext instance from a native pointer.
</summary>
            <param name="ptr">The native pointer to the object.</param>
            <returns>A new instance of the IVNativeContext class.</returns>
        </member>
        <member name="M:IVSDKDotNet.Native.IVNativeContext.AllocateNew">
            <summary>
Allocates and returns a new native context which HAS to be deleted once you're done using it.
</summary>
            <returns>A new instance of the IVNativeContext class.</returns>
        </member>
        <member name="M:IVSDKDotNet.Native.IVNativeContext.GetResult">
            <summary>
Gets the result from this native context.
</summary>
            <returns>An IntPtr which stores the result of this native context.</returns>
        </member>
        <member name="M:IVSDKDotNet.Native.IVNativeContext.PushOut(System.Int32,System.IntPtr@)">
            <summary>
Pushes an OUT argument to this native context. WARNING: The returned IntPtr needs to be freed using the 'Marshal.FreeHGlobal' function
</summary>
            <param name="allocationSize">The size to allocate for the type that is returned. Example: If you want this native call to return an integer, you need to pass in 4 (Integer = 4 Bytes).</param>
            <param name="value">The IntPtr which stores the value that is returned from the native call. WARNING: The returned IntPtr needs to be freed using the 'Marshal.FreeHGlobal' function!</param>
            <returns>
True = The argument got pushed onto this native context.
<para>False = The argument is too big (Only 4 bytes or less allowed).</para><para>False = The maximum number of arguments to push is reached (16).</para></returns>
        </member>
        <member name="M:IVSDKDotNet.Native.IVNativeContext.Push(System.Numerics.Vector2)">
            <summary>
Pushes a Vector2 to this native context.
</summary>
            <param name="value">The value to push.</param>
            <returns>
True = The argument got pushed onto this native context.
<para>False = The argument is too big (Only 4 bytes or less allowed).</para><para>False = The maximum number of arguments to push is reached (16).</para></returns>
        </member>
        <member name="M:IVSDKDotNet.Native.IVNativeContext.Push(System.Numerics.Vector3)">
            <summary>
Pushes a Vector3 to this native context.
</summary>
            <param name="value">The value to push.</param>
            <returns>
True = The argument got pushed onto this native context.
<para>False = The argument is too big (Only 4 bytes or less allowed).</para><para>False = The maximum number of arguments to push is reached (16).</para></returns>
        </member>
        <member name="M:IVSDKDotNet.Native.IVNativeContext.Push(System.Numerics.Quaternion)">
            <summary>
Pushes a Quaternion to this native context.
</summary>
            <param name="value">The value to push.</param>
            <returns>
True = The argument got pushed onto this native context.
<para>False = The argument is too big (Only 4 bytes or less allowed).</para><para>False = The maximum number of arguments to push is reached (16).</para></returns>
        </member>
        <member name="M:IVSDKDotNet.Native.IVNativeContext.Push(System.String)">
            <summary>
Pushes a string to this native context.
</summary>
            <param name="value">The value to push.</param>
            <returns>
True = The argument got pushed onto this native context.
<para>False = The argument is too big (Only 4 bytes or less allowed).</para><para>False = The maximum number of arguments to push is reached (16).</para></returns>
        </member>
        <member name="M:IVSDKDotNet.Native.IVNativeContext.Push(System.Boolean)">
            <summary>
Pushes a bool to this native context.
</summary>
            <param name="value">The value to push.</param>
            <returns>
True = The argument got pushed onto this native context.
<para>False = The argument is too big (Only 4 bytes or less allowed).</para><para>False = The maximum number of arguments to push is reached (16).</para></returns>
        </member>
        <member name="M:IVSDKDotNet.Native.IVNativeContext.Push(System.Single)">
            <summary>
Pushes a float to this native context.
</summary>
            <param name="value">The value to push.</param>
            <returns>
True = The argument got pushed onto this native context.
<para>False = The argument is too big (Only 4 bytes or less allowed).</para><para>False = The maximum number of arguments to push is reached (16).</para></returns>
        </member>
        <member name="M:IVSDKDotNet.Native.IVNativeContext.Push(System.Byte)">
            <summary>
Pushes an unsigned char to this native context.
</summary>
            <param name="value">The value to push.</param>
            <returns>
True = The argument got pushed onto this native context.
<para>False = The argument is too big (Only 4 bytes or less allowed).</para><para>False = The maximum number of arguments to push is reached (16).</para></returns>
        </member>
        <member name="M:IVSDKDotNet.Native.IVNativeContext.Push(System.SByte)">
            <summary>
Pushes a signed char to this native context.
</summary>
            <param name="value">The value to push.</param>
            <returns>
True = The argument got pushed onto this native context.
<para>False = The argument is too big (Only 4 bytes or less allowed).</para><para>False = The maximum number of arguments to push is reached (16).</para></returns>
        </member>
        <member name="M:IVSDKDotNet.Native.IVNativeContext.Push(System.UInt32)">
            <summary>
Pushes an unsigned integer to this native context.
</summary>
            <param name="value">The value to push.</param>
            <returns>
True = The argument got pushed onto this native context.
<para>False = The argument is too big (Only 4 bytes or less allowed).</para><para>False = The maximum number of arguments to push is reached (16).</para></returns>
        </member>
        <member name="M:IVSDKDotNet.Native.IVNativeContext.Push(System.Int32)">
            <summary>
Pushes an integer to this native context.
</summary>
            <param name="value">The value to push.</param>
            <returns>
True = The argument got pushed onto this native context.
<para>False = The argument is too big (Only 4 bytes or less allowed).</para><para>False = The maximum number of arguments to push is reached (16).</para></returns>
        </member>
        <member name="M:IVSDKDotNet.RAGE.GetDirect3DDevice9">
            <summary>
Gets the IDirect3DDevice9 pointer.
</summary>
            <returns>The pointer to the IDirect3DDevice9 of GTA IV.</returns>
        </member>
        <member name="M:IVSDKDotNet.RAGE.GetHWND">
            <summary>
Gets the main window handle pointer.
</summary>
            <returns>The pointer to the main window handle of GTA IV.</returns>
        </member>
        <member name="E:IVSDKDotNet.RAGE.OnExit">
            <summary>
Gets raised when GTA IV is about to close.
</summary>
        </member>
        <member name="E:IVSDKDotNet.RAGE.OnWindowFocusChanged">
            <summary>
Gets raised when the focus of the GTA IV window changes.
This event is NOT thread-safe!
</summary>
        </member>
        <member name="E:IVSDKDotNet.RAGE.OnWndProcMessageReceived">
            <summary>
Gets raised when the GTA IV window receives Windows Messages.
See https://wiki.winehq.org/List_Of_Windows_Messages for a list of all Windows Messages.
</summary>
        </member>
        <member name="P:IVSDKDotNet.MemoryAccess.GameVersion">
            <summary>
Gets the current version of GTA IV.
</summary>
        </member>
        <member name="P:IVSDKDotNet.MemoryAccess.BaseAddress">
            <summary>
The base address of GTA IV.
</summary>
        </member>
        <member name="M:IVSDKDotNet.Manager.ManagerPlugin.GetManagerInstance">
            <summary>
Gives you quick access to the IV-SDK .NET Manager.
</summary>
            <returns>The IV-SDK .NET Manager instance. This should never return null, but it's not wrong to always check it before trying to access any members of this class.</returns>
        </member>
        <member name="E:IVSDKDotNet.Manager.ManagerPlugin.OnAfterScriptsAbort">
            <summary>
Gets raised when the Manager aborted all scripts.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Manager.ManagerPlugin.OnBeforeScriptsAbort">
            <summary>
Gets raised when the Manager is about to abort all scripts.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Manager.ManagerPlugin.OnScriptLoad">
            <summary>
Gets raised before the script initialize event is getting called.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Manager.ManagerPlugin.OnScriptAbort">
            <summary>
Gets raised after a single script was aborted.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Manager.ManagerPlugin.OnShutdown">
            <summary>
Gets raised before the IV-SDK .NET Manager is about to shutdown.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Manager.ManagerPlugin.OnImGuiRendering">
            <summary>
Gets raised every frame and allows you to draw stuff on the screen via the ImGuiIV_DrawingContext struct, or draw custom script windows using ImGui via the ImGuiIV wrapper class.
You are not forced to begin a new window first to add content to with this event, as its already getting called from within a ImGui window.
So, you can instantly start using ImGui and use UI Elements such as the Button, Slider etc. These components will show up in the corresponding collapsing header within the IV-SDK .NET Manger Plugins tab.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Manager.ManagerPlugin.OnFirstD3D9Frame">
            <summary>
Gets raised on the very first Direct3D9 Frame. You can use this to create Textures or Fonts.
</summary>
        </member>
        <member name="E:IVSDKDotNet.Manager.ManagerPlugin.Uninitialize">
            <summary>
Gets raised when the plugin is about to be unloaded so you can free some previously created stuff in here.
</summary>
        </member>
        <member name="P:IVSDKDotNet.Manager.ManagerPlugin.Author">
            <summary>
Gets the author of this plugin which will show in the IV-SDK .NET Manager Plugins tab.
</summary>
        </member>
        <member name="P:IVSDKDotNet.Manager.ManagerPlugin.DisplayName">
            <summary>
Gets the display name of this plugin which will show in the IV-SDK .NET Manager Plugins tab.
</summary>
        </member>
        <member name="P:IVSDKDotNet.Manager.ManagerPlugin.ID">
            <summary>
The unique ID of this plugin.
</summary>
        </member>
        <member name="T:IVSDKDotNet.Manager.ManagerPlugin">
            <summary>
Represents a plugin for the IV-SDK .NET Manager.
</summary>
        </member>
        <member name="T:IVSDKDotNet.Manager.ManagerScript">
            <summary>
Only used for the IV-SDK .NET Manager.
There can only be one instance of this class.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_DrawingContext.FringeScale">
            <summary>
Anti-alias fringe is scaled by this value, this helps to keep things sharp while zooming at vertex buffer content.
This can be used to create a simple glowing effect tho it is not the best way to do it.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_DrawingContext.IsValid">
            <summary>
Gets if this struct contains valid data.
</summary>
        </member>
        <member name="P:IVSDKDotNet.ImGuiIV_DrawingContext.ImDrawListPtr">
            <summary>
Native Pointer to the ImDrawList structure.
</summary>
        </member>
        <member name="M:IVSDKDotNet.Helper.ConvertJsonStringToObject``1(System.String)">
            <summary>
Converts a json string to a object of the target type.
</summary>
            <typeparam name="T">The type the object should be converted to.</typeparam>
            <param name="str">The json string to convert to an object.</param>
            <returns>The object converted from a json string.</returns>
        </member>
        <member name="M:IVSDKDotNet.Helper.ConvertObjectToJsonString(System.Object,System.Boolean)">
            <summary>
Converts an object to a json string.
</summary>
            <param name="obj">The object to be converted to a string.</param>
            <param name="useFormatting">Set this to true if you want to make the string look sexy. False, if you don't care about the style.</param>
            <returns>The object as a string representation.</returns>
        </member>
        <member name="M:IVSDKDotNet.Helper.IsNumericType(System.Type)">
            <summary>
Gets if the given type is a numeric type.
</summary>
            <param name="o">The type to check.</param>
            <returns>True if this type is a numeric type. Otherwise, false.</returns>
        </member>
        <member name="M:IVSDKDotNet.Helper.GetPositionInFrontOfEntity(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)">
            <summary>
Gets the position in front of the given position based on the direction.
</summary>
            <param name="entityPos">The current position.</param>
            <param name="entityDir">The current direction.</param>
            <param name="multiplier">The distance of the in front position.</param>
            <returns>The position in front of the given position.</returns>
        </member>
        <member name="M:IVSDKDotNet.Helper.StringToBoolean(System.String,System.Boolean)">
            <summary>
Tries to convert the string to a boolean.
</summary>
            <param name="Input">The given string.</param>
            <param name="DefaultValue">If the conversion fails, use this value.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:IVSDKDotNet.Helper.IsKeyPressedAsync(System.Windows.Forms.Keys)">
            <summary>
Checks if the specified key is pressed.
</summary>
            <param name="key">: The key to check if it's pressed.</param>
            <returns>True if the key is pressed, otherwise false.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.SetVector4(System.String,System.String,System.Numerics.Vector4)">
            <summary>
Sets the Vector4 from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to set the value to.</param>
            <param name="value">The new value.</param>
            <returns>True if the value from the given section and key got changed. Otherwise false if the section or key does not exists.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.GetVector4(System.String,System.String,System.Numerics.Vector4)">
            <summary>
Gets an Vector4 from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to get the value from.</param>
            <param name="defaultValue">The default value if get value fails.</param>
            <returns>The Vector4 from the given section and key strings. Otherwise it returns defaultValue.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.SetVector3(System.String,System.String,System.Numerics.Vector3)">
            <summary>
Sets the Vector3 from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to set the value to.</param>
            <param name="value">The new value.</param>
            <returns>True if the value from the given section and key got changed. Otherwise false if the section or key does not exists.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.GetVector3(System.String,System.String,System.Numerics.Vector3)">
            <summary>
Gets an Vector3 from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to get the value from.</param>
            <param name="defaultValue">The default value if get value fails.</param>
            <returns>The Vector3 from the given section and key strings. Otherwise it returns defaultValue.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.SetVector2(System.String,System.String,System.Numerics.Vector2)">
            <summary>
Sets the Vector2 from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to set the value to.</param>
            <param name="value">The new value.</param>
            <returns>True if the value from the given section and key got changed. Otherwise false if the section or key does not exists.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.GetVector2(System.String,System.String,System.Numerics.Vector2)">
            <summary>
Gets an Vector2 from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to get the value from.</param>
            <param name="defaultValue">The default value if get value fails.</param>
            <returns>The Vector2 from the given section and key strings. Otherwise it returns defaultValue.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.SetQuaternion(System.String,System.String,System.Numerics.Quaternion)">
            <summary>
Sets the Quaternion from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to set the value to.</param>
            <param name="value">The new value.</param>
            <returns>True if the value from the given section and key got changed. Otherwise false if the section or key does not exists.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.GetQuaternion(System.String,System.String,System.Numerics.Quaternion)">
            <summary>
Gets an Quaternion from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to get the value from.</param>
            <param name="defaultValue">The default value if get value fails.</param>
            <returns>The Quaternion from the given section and key strings. Otherwise it returns defaultValue.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.SetKey(System.String,System.String,System.Windows.Forms.Keys)">
            <summary>
Sets the WinForms Key from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to set the value to.</param>
            <param name="value">The new value.</param>
            <returns>True if the value from the given section and key got changed. Otherwise false if the section or key does not exists.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.GetKey(System.String,System.String,System.Windows.Forms.Keys)">
            <summary>
Gets the WinForms Key from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to get the value from.</param>
            <param name="defaultValue">The default value if get value fails.</param>
            <returns>The WinForms Key from the given section and key strings. Otherwise it returns defaultValue.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.SetColor(System.String,System.String,System.Drawing.Color)">
            <summary>
Sets the color from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to set the value to.</param>
            <param name="value">The new value.</param>
            <returns>True if the value from the given section and key got changed. Otherwise false if the section or key does not exists.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.GetColor(System.String,System.String,System.Drawing.Color)">
            <summary>
Gets the color from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to get the value from.</param>
            <param name="defaultValue">The default value if get value fails.</param>
            <returns>The color from the given section and key strings. Otherwise it returns defaultValue.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.SetDouble(System.String,System.String,System.Double)">
            <summary>
Sets the double from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to set the value to.</param>
            <param name="value">The new value.</param>
            <returns>True if the value from the given section and key got changed. Otherwise false if the section or key does not exists.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.GetDouble(System.String,System.String,System.Double)">
            <summary>
Gets the double from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to get the value from.</param>
            <param name="defaultValue">The default value if get value fails.</param>
            <returns>The double from the given section and key strings. Otherwise it returns defaultValue.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.SetFloat(System.String,System.String,System.Single)">
            <summary>
Sets the float from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to set the value to.</param>
            <param name="value">The new value.</param>
            <returns>True if the value from the given section and key got changed. Otherwise false if the section or key does not exists.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.GetFloat(System.String,System.String,System.Single)">
            <summary>
Gets the float from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to get the value from.</param>
            <param name="defaultValue">The default value if get value fails.</param>
            <returns>The float from the given section and key strings. Otherwise it returns defaultValue.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.SetUInteger(System.String,System.String,System.UInt32)">
            <summary>
Sets the unsigned integer from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to set the value to.</param>
            <param name="value">The new value.</param>
            <returns>True if the value from the given section and key got changed. Otherwise false if the section or key does not exists.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.GetUInteger(System.String,System.String,System.UInt32)">
            <summary>
Gets the unsigned integer from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to get the value from.</param>
            <param name="defaultValue">The default value if get value fails.</param>
            <returns>The unsigned integer from the given section and key strings. Otherwise it returns defaultValue.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.SetInteger(System.String,System.String,System.Int32)">
            <summary>
Sets the integer from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to set the value to.</param>
            <param name="value">The new value.</param>
            <returns>True if the value from the given section and key got changed. Otherwise false if the section or key does not exists.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.GetInteger(System.String,System.String,System.Int32)">
            <summary>
Gets the integer from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to get the value from.</param>
            <param name="defaultValue">The default value if get value fails.</param>
            <returns>The integer from the given section and key strings. Otherwise it returns defaultValue.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.SetBoolean(System.String,System.String,System.Boolean)">
            <summary>
Sets the boolean from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to set the value to.</param>
            <param name="value">The new value.</param>
            <returns>True if the value from the given section and key got changed. Otherwise false if the section or key does not exists.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.GetBoolean(System.String,System.String,System.Boolean)">
            <summary>
Gets the boolean from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to get the value from.</param>
            <param name="defaultValue">The default value if get value fails.</param>
            <returns>The boolean from the given section and key strings. Otherwise it returns defaultValue.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.SetValue(System.String,System.String,System.String)">
            <summary>
Sets the value from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to set the value to.</param>
            <param name="value">The new value.</param>
            <returns>True if the value from the given section and key got changed. Otherwise false if the section or key does not exists.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.GetValue(System.String,System.String,System.String)">
            <summary>
Gets the value from the given section and key strings from the loaded ini file.
</summary>
            <param name="section">The section the key is located.</param>
            <param name="key">The key you want to get the value from.</param>
            <param name="defaultValue">The default value if get value fails.</param>
            <returns>The value from the given section and key strings. Otherwise it returns defaultValue.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.GetTotalLineCount">
            <summary>
Gets the total number of lines there are currently in the settings file.
</summary>
            <returns>The current number of lines there will be file.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.ClearSection(System.String)">
            <summary>
Clears all keys that are within the given section.
</summary>
            <param name="section">The section to clear all keys from.</param>
            <returns>True if the keys should be removed from this section. False if the given name is null or whitespace, or if the section does not exists.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.DoesKeyExists(System.String,System.String)">
            <summary>
Checks if the key exists in the given section.
</summary>
            <param name="section">The section to check if the key exists in it.</param>
            <param name="key">The key to check for if it exists in the given section.</param>
            <returns>True if the key exists in the given secrion. False if any of the names is null or whitespace, or if the section or key does not exists.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.DoesSectionExists(System.String)">
            <summary>
Checks if a section exists.
</summary>
            <param name="section">The name of the section.</param>
            <returns>True if the section exists. False if the given name is null or whitespace, or if the section does not exists.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.InsertAt(System.Int32,System.String)">
            <summary>
Allows you to insert a string at the given line number.
An ideal usecase of this method would be to add comments to the settings file.
</summary>
            <param name="line">At which line you would like to add the new string.</param>
            <param name="str">The string to add at the given line.</param>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.AddKeyToSection(System.String,System.String)">
            <summary>
Adds a new key to the specified section.
</summary>
            <param name="section">The section to add the new key.</param>
            <param name="key">The name of the new key.</param>
            <returns>True if the key got created in the section. Otherwise false if the section does not exists, the key already exists in the ini or if the name is null.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.AddSection(System.String)">
            <summary>
Adds a new section to the ini file.
</summary>
            <param name="section">The name of the new section.</param>
            <returns>True if the section got created. Otherwise false if the section already exists in the ini or if the name is null.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.Clear">
            <summary>
Clears everything from the loaded ini file.
</summary>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.Load">
            <summary>
Loads the content of the specified ini file.
If you made changes to the ini via SetValue and reload the file those changes are getting lost if you haven't saved the file first with Save.
</summary>
            <returns>True if the file got loaded. False when the file does not exists.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.Save">
            <summary>
Overrides the current ini file with the new content.
</summary>
            <returns>True if the file got saved. False when the file does not exists or if there is nothing to save.</returns>
        </member>
        <member name="M:IVSDKDotNet.SettingsFile.#ctor(System.String)">
            <summary>
Creates a new instance of the SettingsFile class.
</summary>
            <param name="filePath">The path to the ini file.</param>
        </member>
        <member name="P:IVSDKDotNet.SettingsFile.FilePath">
            <summary>
The path to the ini file.
</summary>
        </member>
        <member name="T:IVSDKDotNet.SettingsFile">
            <summary>
Can be used to save and load settings.
If your script has a settings file, it will be automatically loaded.
Inline comments are not supported!
</summary>
        </member>
        <member name="T:IVSDKDotNet.Hooking.GameHooks">
            <summary>
Contains hooks for certain game functions.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.Dot3x3(IVSDKDotNet.IVMatrix)">
            <summary>
Transform the 3x3 part of the current matrix by the 3x3 part of another matrix.
</summary>
            <param name="m">The matrix that transforms the current matrix.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.LookAt(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
Set the current matrix to one that looks from the point 'from' toward the point 'to'.
</summary>
            <param name="from">The point to look from.</param>
            <param name="to">The point to look towards.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.LookAt(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
Set the current matrix to one that looks from the current position toward the point 'to'.
</summary>
            <param name="to">The point to look towards.</param>
            <param name="up">Usually Vector3.UnitY</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.LookDown(System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
Set the current matrix to one that looks from the current position in the direction 'dir'.
</summary>
            <param name="dir">The direction to look.</param>
            <param name="up">Usually Vector3.UnitY</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.MakeTranslate(System.Single,System.Single,System.Single)">
            <summary>
Set the position of the current matrix.
</summary>
            <param name="x">The x component to set the position of the matrix to.</param>
            <param name="y">The y component to set the position of the matrix to.</param>
            <param name="z">The z component to set the position of the matrix to.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.MakeTranslate(System.Numerics.Vector3)">
            <summary>
Set the position of the current matrix by a vector.
</summary>
            <param name="v">The vector to set the position of the matrix to.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.Translate(System.Single,System.Single,System.Single)">
            <summary>
Translate the position of the current matrix by a vector.
</summary>
            <param name="x">The x component to translate the position by.</param>
            <param name="y">The y component to translate the position by.</param>
            <param name="z">The z component to translate the position by.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.Translate(System.Numerics.Vector3)">
            <summary>
Translate the position of the current matrix by a vector.
</summary>
            <param name="v">The vector to translate by.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.MakeScale(System.Numerics.Vector3)">
            <summary>
Set the 3x3 part of the current matrix to a scaling matrix.
</summary>
            <param name="v">The vector containing the three scaling factors for the matrix.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.MakeScale(System.Single,System.Single,System.Single)">
            <summary>
Set the 3x3 part of the current matrix to a scaling matrix.
</summary>
            <param name="x">The x scaling factor for the matrix.</param>
            <param name="y">The y scaling factor for the matrix.</param>
            <param name="z">The z scaling factor for the matrix.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.MakeScale(System.Single)">
            <summary>
Set the 3x3 part of the current matrix to a scaling matrix.
</summary>
            <param name="s">The scaling factor for the matrix.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.ScaleFull(System.Numerics.Vector3)">
            <summary>
Scale the current matrix by three given factors taken from a vector.
</summary>
            <param name="v">The vector containing the three scaling factors for the matrix.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.ScaleFull(System.Single,System.Single,System.Single)">
            <summary>
Scale the current matrix by three given factors.
</summary>
            <param name="x">The x scaling factor for the matrix.</param>
            <param name="y">The y scaling factor for the matrix.</param>
            <param name="z">The z scaling factor for the matrix.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.ScaleFull(System.Single)">
            <summary>
Scale the current matrix by a given factor.
</summary>
            <param name="s">The scaling factor for the matrix.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.Scale(System.Single,System.Single,System.Single)">
            <summary>
Scale the 3x3 part of the current matrix by three given factors.
</summary>
            <param name="x">The x scaling factor for the matrix.</param>
            <param name="y">The y scaling factor for the matrix.</param>
            <param name="z">The z scaling factor for the matrix.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.Scale(System.Single)">
            <summary>
Scale the 3x3 part of the current matrix by a given factor.
</summary>
            <param name="s">The scaling factor for the matrix.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.MakeRotateZ(System.Single)">
            <summary>
Rotate the 3x3 part of the current matrix, along the world's +Z axis, by the given angle.
</summary>
            <param name="t">The angle of rotation, in radians.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.MakeRotateY(System.Single)">
            <summary>
Rotate the 3x3 part of the current matrix, along the world's +Y axis, by the given angle.
</summary>
            <param name="t">The angle of rotation, in radians.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.MakeRotateX(System.Single)">
            <summary>
Rotate the 3x3 part of the current matrix, along the world's +X axis, by the given angle.
</summary>
            <param name="t">The angle of rotation, in radians.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.RotateZ(System.Single)">
            <summary>
Rotate the 3x3 part of the current matrix, along the world's +Z axis, by the given angle.
</summary>
            <param name="t">The angle of rotation, in radians.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.RotateY(System.Single)">
            <summary>
Rotate the 3x3 part of the current matrix, along the world's +Y axis, by the given angle.
</summary>
            <param name="t">The angle of rotation, in radians.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.RotateX(System.Single)">
            <summary>
Rotate the 3x3 part of the current matrix, along the world's +X axis, by the given angle.
</summary>
            <param name="t">The angle of rotation, in radians.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.Set(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
Set the elements of the current matrix to the given elements.
</summary>
            <param name="ax">The new value for the right-vector of the current matrix.</param>
            <param name="ay">The new value for the right-vector of the current matrix.</param>
            <param name="az">The new value for the right-vector of the current matrix.</param>
            <param name="bx">The new value for the up-vector of the current matrix.</param>
            <param name="by">The new value for the up-vector of the current matrix.</param>
            <param name="bz">The new value for the up-vector of the current matrix.</param>
            <param name="cx">The new value for the at-vector of the current matrix.</param>
            <param name="cy">The new value for the at-vector of the current matrix.</param>
            <param name="cz">The new value for the at-vector of the current matrix.</param>
            <param name="dx">The new value for the pos-vector of the current matrix. Default is 0.0f</param>
            <param name="dy">The new value for the pos-vector of the current matrix. Default is 0.0f</param>
            <param name="dz">The new value for the pos-vector of the current matrix. Default is 0.0f</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.Set(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
Set the elements of the current matrix to the given elements.
</summary>
            <param name="newRight">New value for the right-vector of the current matrix.</param>
            <param name="newUp">New value for the up-vector of the current matrix.</param>
            <param name="newAt">New value for the at-vector of the current matrix.</param>
            <param name="newPos">Optional new value for the pos-vector of the current matrix; default is Vector3.Zero</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.Set(IVSDKDotNet.IVMatrix)">
            <summary>
Set the value of the current matrix to the value of another matrix.
</summary>
            <param name="m">The matrix containing the new value for the current matrix.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.Set3x3(IVSDKDotNet.IVMatrix)">
            <summary>
Set the 3x3 part of the current matrix to the 3x3 part of another matrix.
</summary>
            <param name="m">The matrix containing the 3x3 part to be copied.</param>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.Zero">
            <summary>
Zero the current matrix (i.e. set all of its elements to zero).
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.Zero3x3">
            <summary>
Zero the 3x3 part of the current matrix.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.Identity">
            <summary>
Set the current matrix to the identity matrix.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.Identity3x3">
            <summary>
Set the 3x3 part of the current matrix to the identity matrix.
</summary>
        </member>
        <member name="M:IVSDKDotNet.IVMatrix.SetFrom(IVSDKDotNet.IVMatrix)">
            <summary>
Sets the values of all four fields in this IVMatrix to the values of the fields inside the given matrix.
</summary>
            <param name="matrix">The matrix to set all values of the fields in this IVMatrix to.</param>
        </member>
        <member name="P:IVSDKDotNet.IVMatrix.Pos">
            <summary>D</summary>
        </member>
        <member name="P:IVSDKDotNet.IVMatrix.At">
            <summary>C</summary>
        </member>
        <member name="P:IVSDKDotNet.IVMatrix.Up">
            <summary>B</summary>
        </member>
        <member name="P:IVSDKDotNet.IVMatrix.Right">
            <summary>A</summary>
        </member>
        <member name="T:IVSDKDotNet.IVMatrix">
            <summary>
Represents a 3x4-matrix with 3 columns and 4 rows where the first 3 rows are used for orientation and the last for position.
</summary>
        </member>
        <member name="M:IVSDKDotNet.Hooking.Patterns.GetAddress(System.String,System.UInt32,System.UInt32)">
            <summary>
Scans for the given pattern and returns the address.
</summary>
            <param name="pattern">The pattern to scan for.</param>
            <param name="index">Get the match at that index.</param>
            <param name="offset">Offset for the pattern.</param>
            <returns>The address from the given pattern.</returns>
        </member>
        <member name="M:IVSDKDotNet.Hooking.Patterns.GetAddress(System.IntPtr,System.String,System.UInt32,System.UInt32)">
            <summary>
Scans for the given pattern at the given module and returns the address.
</summary>
            <param name="pattern">The pattern to scan for.</param>
            <param name="index">Get the match at that index.</param>
            <param name="offset">Offset for the pattern.</param>
            <returns>The address from the given pattern.</returns>
        </member>
        <member name="M:Logger.LogErrorEx(System.String,System.Object[])">
            <summary>
Logs a formatted message to the IVSDKDotNet.log file, and in the IV-SDK .NET Console with the "Error" style.
</summary>
            <param name="str">The message to log.</param>
            <param name="args">The objects to format.</param>
        </member>
        <member name="M:Logger.LogError(System.String)">
            <summary>
Logs a message to the IVSDKDotNet.log file and also shows it in the IV-SDK .NET Console with the "Error" style.
</summary>
            <param name="str">The message to log.</param>
        </member>
        <member name="M:Logger.LogError(System.String,System.Boolean)">
            <summary>
Logs a message to the IVSDKDotNet.log file and also shows it in the IV-SDK .NET Console (if set) with the "Error" style.
</summary>
            <param name="str">The message to log.</param>
            <param name="alsoShowInConsole">Sets if it should also show up in the IV-SDK .NET Console.</param>
        </member>
        <member name="M:Logger.LogWarningEx(System.String,System.Object[])">
            <summary>
Logs a formatted message to the IVSDKDotNet.log file, and in the IV-SDK .NET Console with the "Warning" style.
</summary>
            <param name="str">The message to log.</param>
            <param name="args">The objects to format.</param>
        </member>
        <member name="M:Logger.LogWarning(System.String)">
            <summary>
Logs a message to the IVSDKDotNet.log file and also shows it in the IV-SDK .NET Console with the "Warning" style.
</summary>
            <param name="str">The message to log.</param>
        </member>
        <member name="M:Logger.LogWarning(System.String,System.Boolean)">
            <summary>
Logs a message to the IVSDKDotNet.log file and also shows it in the IV-SDK .NET Console (if set) with the "Warning" style.
</summary>
            <param name="str">The message to log.</param>
            <param name="alsoShowInConsole">Sets if it should also show up in the IV-SDK .NET Console.</param>
        </member>
        <member name="M:Logger.LogDebugEx(System.String,System.Object[])">
            <summary>
Only available in debug builds! Logs a formatted message to the IVSDKDotNet.log file, and in the IV-SDK .NET Console with the "Debug" style.
</summary>
            <param name="str">The message to log.</param>
            <param name="args">The objects to format.</param>
        </member>
        <member name="M:Logger.LogDebug(System.String)">
            <summary>
Only available in debug builds! Logs a message to the IVSDKDotNet.log file and also shows it in the IV-SDK .NET Console with the "Debug" style.
</summary>
            <param name="str">The message to log.</param>
        </member>
        <member name="M:Logger.LogDebug(System.String,System.Boolean)">
            <summary>
Only available in debug builds! Logs a message to the IVSDKDotNet.log file and also shows it in the IV-SDK .NET Console (if set) with the "Debug" style.
</summary>
            <param name="str">The message to log.</param>
            <param name="alsoShowInConsole">Sets if it should also show up in the IV-SDK .NET Console.</param>
        </member>
        <member name="M:Logger.LogEx(System.String,System.Object[])">
            <summary>
Logs a formatted message to the IVSDKDotNet.log file, and in the IV-SDK .NET Console without a specific style.
</summary>
            <param name="str">The message to log.</param>
            <param name="args">The objects to format.</param>
        </member>
        <member name="M:Logger.Log(System.String)">
            <summary>
Logs a message to the IVSDKDotNet.log file and also shows it in the IV-SDK .NET Console without a specific style.
</summary>
            <param name="str">The message to log.</param>
        </member>
        <member name="M:Logger.Log(System.String,System.Boolean)">
            <summary>
Logs a message to the IVSDKDotNet.log file and also shows it in the IV-SDK .NET Console (if set) without a specific style.
</summary>
            <param name="str">The message to log.</param>
            <param name="alsoShowInConsole">Sets if it should also show up in the IV-SDK .NET Console.</param>
        </member>
        <member name="P:Logger.tLogItem.AddInConsole">
            <summary>
Gets if this item should also be in the IV-SDK .NET Console.
</summary>
        </member>
        <member name="P:Logger.tLogItem.Text">
            <summary>
Get the text of this item.
</summary>
        </member>
        <member name="P:Logger.tLogItem.Style">
            <summary>
Gets the style of this item for the IV-SDK .NET Console.
</summary>
        </member>
        <member name="P:Logger.tLogItem.LogTime">
            <summary>
Gets the time this item was logged.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.IsHovered">
            <summary>
[READONLY OUTPUT FLAG] Status: is hovered by mouse
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.IsSorted">
            <summary>
[READONLY OUTPUT FLAG] Status: is currently part of the sort specs
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.IsVisible">
            <summary>
[READONLY OUTPUT FLAG] Status: is visible == is enabled AND not clipped by scrolling.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.IsEnabled">
            <summary>
[READONLY OUTPUT FLAG] Status: is enabled == not hidden by user/api (referred to as "Hide" in _DefaultHide and _NoHide) flags.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.AngledHeader">
            <summary>
TableHeadersRow() will submit an angled header row for this column. Note this will add an extra row.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.IndentDisable">
            <summary>
Ignore current Indent value when entering cell (default for columns &gt; 0). Indentation changes _within_ the cell will still be honored.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.IndentEnable">
            <summary>
Use current Indent value when entering cell (default for column 0).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.PreferSortDescending">
            <summary>
Make the initial sort direction Descending when first sorting on this column.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.PreferSortAscending">
            <summary>
Make the initial sort direction Ascending when first sorting on this column (default).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.NoHeaderWidth">
            <summary>
Disable header text width contribution to automatic column width.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.NoHeaderLabel">
            <summary>
TableHeadersRow() will not submit horizontal label for this column. Convenient for some small columns. Name will still appear in context menu or in angled headers.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.NoSortDescending">
            <summary>
Disable ability to sort in the descending direction.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.NoSortAscending">
            <summary>
Disable ability to sort in the ascending direction.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.NoSort">
            <summary>
Disable ability to sort on this field (even if ImGuiTableFlags_Sortable is set on the table).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.NoClip">
            <summary>
Disable clipping for this column (all NoClip columns will render in a same draw command).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.NoHide">
            <summary>
Disable ability to hide/disable this column.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.NoReorder">
            <summary>
Disable manual reordering this column, this will also prevent other columns from crossing over this column.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.NoResize">
            <summary>
Disable manual resizing.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.WidthFixed">
            <summary>
Column will not stretch. Preferable with horizontal scrolling enabled (default if table sizing policy is _SizingFixedFit and table is resizable).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.WidthStretch">
            <summary>
Column will stretch. Preferable with horizontal scrolling disabled (default if table sizing policy is _SizingStretchSame or _SizingStretchProp).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.DefaultSort">
            <summary>
Default as a sorting column.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.DefaultHide">
            <summary>
Default as a hidden/disabled column.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableColumnFlags.Disabled">
            <summary>
Overriding/master disable flag: hide column, won't show in context menu (unlike calling TableSetColumnEnabled() which manipulates the user accessible state)
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableRowFlags.Headers">
            <summary>
Identify header row (set default background color + width of its contents accounted differently for auto column width).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.SortTristate">
            <summary>
Allow no sorting, disable default sorting. TableGetSortSpecs() may return specs where (SpecsCount == 0).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.SortMulti">
            <summary>
Hold shift when clicking headers to sort on multiple column. TableGetSortSpecs() may return specs where (SpecsCount &gt; 1).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.ScrollY">
            <summary>
Enable vertical scrolling. Require 'outer_size' parameter of BeginTable() to specify the container size.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.ScrollX">
            <summary>
Enable horizontal scrolling. Require 'outer_size' parameter of BeginTable() to specify the container size. Changes default sizing policy. Because this creates a child window, ScrollY is currently generally recommended when using ScrollX.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.NoPadInnerX">
            <summary>
Disable inner padding between columns (double inner padding if BordersOuterV is on, single inner padding if BordersOuterV is off).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.NoPadOuterX">
            <summary>
Default if BordersOuterV is off. Disable outermost padding.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.PadOuterX">
            <summary>
Default if BordersOuterV is on. Enable outermost padding. Generally desirable if you have headers.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.NoClip">
            <summary>
Disable clipping rectangle for every individual columns (reduce draw command count, items will be able to overflow into other columns). Generally incompatible with TableSetupScrollFreeze().
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.PreciseWidths">
            <summary>
Disable distributing remainder width to stretched columns (width allocation on a 100-wide table with 3 columns: Without this flag: 33,33,34. With this flag: 33,33,33). With larger number of columns, resizing will appear to be less smooth.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.NoKeepColumnsVisible">
            <summary>
Disable keeping column always minimally visible when ScrollX is off and table gets too small. Not recommended if columns are resizable.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.NoHostExtendY">
            <summary>
Make outer height stop exactly at outer_size.y (prevent auto-extending table past the limit). Only available when ScrollX/ScrollY are disabled. Data below the limit will be clipped and not visible.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.NoHostExtendX">
            <summary>
Make outer width auto-fit to columns, overriding outer_size.x value. Only available when ScrollX/ScrollY are disabled and Stretch columns are not used.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.SizingStretchSame">
            <summary>
Columns default to _WidthStretch with default weights all equal, unless overridden by TableSetupColumn().
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.SizingStretchProp">
            <summary>
Columns default to _WidthStretch with default weights proportional to each columns contents widths.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.SizingFixedSame">
            <summary>
Columns default to _WidthFixed or _WidthAuto (if resizable or not resizable), matching the maximum contents width of all columns. Implicitly enable ImGuiTableFlags_NoKeepColumnsVisible.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.SizingFixedFit">
            <summary>
Columns default to _WidthFixed or _WidthAuto (if resizable or not resizable), matching contents width.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.NoBordersInBodyUntilResize">
            <summary>
[ALPHA] Disable vertical borders in columns Body until hovered for resize (borders will always appear in Headers). -&gt; May move to style.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.NoBordersInBody">
            <summary>
[ALPHA] Disable vertical borders in columns Body (borders will always appear in Headers). -&gt; May move to style.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.Borders">
            <summary>
Draw all borders.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.BordersOuter">
            <summary>
Draw outer borders.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.BordersInner">
            <summary>
Draw inner borders.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.BordersV">
            <summary>
Draw vertical borders.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.BordersH">
            <summary>
Draw horizontal borders.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.BordersOuterV">
            <summary>
Draw vertical borders on the left and right sides.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.BordersInnerV">
            <summary>
Draw vertical borders between columns.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.BordersOuterH">
            <summary>
Draw horizontal borders at the top and bottom.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.BordersInnerH">
            <summary>
Draw horizontal borders between rows.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.RowBg">
            <summary>
Set each RowBg color with ImGuiCol_TableRowBg or ImGuiCol_TableRowBgAlt (equivalent of calling TableSetBgColor with ImGuiTableBgFlags_RowBg0 on each row manually).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.ContextMenuInBody">
            <summary>
Right-click on columns body/contents will display table context menu. By default it is available in TableHeadersRow().
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.NoSavedSettings">
            <summary>
Disable persisting columns order, width and sort settings in the .ini file.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.Sortable">
            <summary>
Enable sorting. Call TableGetSortSpecs() to obtain sort specs. Also see ImGuiTableFlags_SortMulti and ImGuiTableFlags_SortTristate.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.Hideable">
            <summary>
Enable hiding/disabling columns in context menu.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.Reorderable">
            <summary>
Enable reordering columns in header row (need calling TableSetupColumn() + TableHeadersRow() to display headers).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTableFlags.Resizable">
            <summary>
Enable resizing columns.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTreeNodeFlags.NavLeftJumpsBackHere">
            <summary>
(WIP) Nav: left direction may move to this TreeNode() from any of its child (items submitted between TreeNode and TreePop).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTreeNodeFlags.SpanFullWidth">
            <summary>
Extend hit box to the left-most and right-most edges (bypass the indented area).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTreeNodeFlags.SpanAvailWidth">
            <summary>
Extend hit box to the right-most edge, even if not framed. This is not the default in order to allow adding other items on the same line. In the future we may refactor the hit system to be front-to-back, allowing natural overlaps and then this can become the default.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTreeNodeFlags.FramePadding">
            <summary>
Use FramePadding (even for an unframed text node) to vertically align text baseline to regular widget height. Equivalent to calling AlignTextToFramePadding().
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTreeNodeFlags.Bullet">
            <summary>
Display a bullet instead of arrow.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTreeNodeFlags.Leaf">
            <summary>
No collapsing, no arrow (use as a convenience for leaf nodes).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTreeNodeFlags.OpenOnArrow">
            <summary>
Only open when clicking on the arrow part. If ImGuiTreeNodeFlags_OpenOnDoubleClick is also set, single-click arrow or double-click all box to open.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTreeNodeFlags.OpenOnDoubleClick">
            <summary>
Need double-click to open node.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTreeNodeFlags.DefaultOpen">
            <summary>
Default node to be open.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTreeNodeFlags.NoAutoOpenOnLog">
            <summary>
Don't automatically and temporarily open node when Logging is active (by default logging will automatically open tree nodes).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTreeNodeFlags.NoTreePushOnOpen">
            <summary>
Don't do a TreePush() when open (e.g. for CollapsingHeader) = no extra indent nor pushing on ID stack.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTreeNodeFlags.AllowOverlap">
            <summary>
Hit testing to allow subsequent widgets to overlap this one.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTreeNodeFlags.Framed">
            <summary>
Draw frame with background (e.g. for CollapsingHeader).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTreeNodeFlags.Selected">
            <summary>
Draw as selected.
</summary>
        </member>
        <member name="T:IVSDKDotNet.Enums.eImGuiInputTextFlags">
            <summary>
Flags for ImGuiIV.InputText()
(Those are per-item flags. There are shared flags in ImGuiIO: io.ConfigInputTextCursorBlink and io.ConfigInputTextEnterKeepActive)
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiInputTextFlags.EscapeClearsAll">
            <summary>
Escape key clears content if not empty, and deactivate otherwise (contrast to default behavior of Escape to revert).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiInputTextFlags.CallbackEdit">
            <summary>
Callback on any edit (note that InputText() already returns true on edit, the callback is useful mainly to manipulate the underlying buffer while focus is active).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiInputTextFlags.CallbackResize">
            <summary>
Callback on buffer capacity changes request (beyond 'buf_size' parameter value), allowing the string to grow. Notify when the string wants to be resized (for string types which hold a cache of their Size). You will be provided a new BufSize in the callback and NEED to honor it. (see misc/cpp/imgui_stdlib.h for an example of using this).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiInputTextFlags.CharsScientific">
            <summary>
Allow 0123456789.+-*/eE (Scientific notation input).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiInputTextFlags.NoUndoRedo">
            <summary>
Disable undo/redo. Note that input text owns the text data while active, if you want to provide your own undo/redo stack you need e.g. to call ClearActiveID().
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiInputTextFlags.Password">
            <summary>
Password mode, display all characters as '*'.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiInputTextFlags.ReadOnly">
            <summary>
Read-only mode.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiInputTextFlags.AlwaysOverwrite">
            <summary>
Overwrite mode.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiInputTextFlags.NoHorizontalScroll">
            <summary>
Disable following the cursor horizontally.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiInputTextFlags.CtrlEnterForNewLine">
            <summary>
In multi-line mode, unfocus with Enter, add new line with Ctrl+Enter (default is opposite: unfocus with Ctrl+Enter, add line with Enter).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiInputTextFlags.AllowTabInput">
            <summary>
Pressing TAB input a '\t' character into the text field.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiInputTextFlags.CallbackCharFilter">
            <summary>
Callback on character inputs to replace or discard them. Modify 'EventChar' to replace or discard, or return 1 in callback to discard.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiInputTextFlags.CallbackAlways">
            <summary>
Callback on each iteration. User code may query cursor position, modify text buffer.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiInputTextFlags.CallbackHistory">
            <summary>
Callback on pressing Up/Down arrows (for history handling).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiInputTextFlags.CallbackCompletion">
            <summary>
Callback on pressing TAB (for completion handling).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiInputTextFlags.EnterReturnsTrue">
            <summary>
Return 'true' when Enter is pressed (as opposed to every time the value was modified). Consider looking at the IsItemDeactivatedAfterEdit() function.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiInputTextFlags.AutoSelectAll">
            <summary>
Select entire text when first taking mouse focus.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiInputTextFlags.CharsNoBlank">
            <summary>
Filter out spaces, tabs
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiInputTextFlags.CharsUppercase">
            <summary>
Turn a..z into A..Z
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiInputTextFlags.CharsHexadecimal">
            <summary>
0123456789ABCDEFabcdef
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiInputTextFlags.CharsDecimal">
            <summary>
Allow 0123456789.+-*/
</summary>
        </member>
        <member name="T:IVSDKDotNet.Enums.eImGuiCol">
            <summary>
Enumeration for ImGuiIV.PushStyleColor() / ImGuiIV.PopStyleColor().
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiCol.ModalWindowDimBg">
            <summary>
Darken/colorize entire screen behind a modal window, when one is active.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiCol.NavWindowingDimBg">
            <summary>
Darken/colorize entire screen behind the CTRL+TAB window list, when active.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiCol.NavWindowingHighlight">
            <summary>
Highlight window when using CTRL+TAB.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiCol.NavHighlight">
            <summary>
Gamepad/keyboard: current highlighted item.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiCol.DragDropTarget">
            <summary>
Rectangle highlighting a drop target.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiCol.TableRowBgAlt">
            <summary>
Table row background (odd rows).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiCol.TableRowBg">
            <summary>
Table row background (even rows).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiCol.TableBorderLight">
            <summary>
Table inner borders (prefer using Alpha=1.0 here).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiCol.TableBorderStrong">
            <summary>
Table outer and header borders (prefer using Alpha=1.0 here).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiCol.TableHeaderBg">
            <summary>
Table header background.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiCol.Tab">
            <summary>
TabItem in a TabBar.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiCol.ResizeGrip">
            <summary>
Resize grip in lower-right and lower-left corners of windows.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiCol.Header">
            <summary>
Header* colors are used for CollapsingHeader, TreeNode, Selectable, MenuItem.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiCol.FrameBg">
            <summary>
Background of checkbox, radio button, plot, slider, text input.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiCol.PopupBg">
            <summary>
Background of popups, menus, tooltips windows.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiCol.ChildBg">
            <summary>
Background of child windows.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiCol.WindowBg">
            <summary>
Background of normal windows.
</summary>
        </member>
        <member name="T:IVSDKDotNet.Enums.eImGuiStyleVar">
            <summary>
See ImGuiStyle for descriptions
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.SeparatorTextPadding">
            <summary>
Type: Vector2
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.SeparatorTextAlign">
            <summary>
Type: Vector2
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.SeparatorTextBorderSize">
            <summary>
Type: float
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.SelectableTextAlign">
            <summary>
Type: Vector2
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.ButtonTextAlign">
            <summary>
Type: Vector2
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.TabBarBorderSize">
            <summary>
Type: float
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.TabRounding">
            <summary>
Type: float
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.GrabRounding">
            <summary>
Type: float
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.GrabMinSize">
            <summary>
Type: float
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.ScrollbarRounding">
            <summary>
Type: float
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.ScrollbarSize">
            <summary>
Type: float
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.CellPadding">
            <summary>
Type: Vector2
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.IndentSpacing">
            <summary>
Type: float
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.ItemInnerSpacing">
            <summary>
Type: Vector2
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.ItemSpacing">
            <summary>
Type: Vector2
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.FrameBorderSize">
            <summary>
Type: float
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.FrameRounding">
            <summary>
Type: float
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.FramePadding">
            <summary>
Type: Vector2
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.PopupBorderSize">
            <summary>
Type: float
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.PopupRounding">
            <summary>
Type: float
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.ChildBorderSize">
            <summary>
Type: float
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.ChildRounding">
            <summary>
Type: float
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.WindowTitleAlign">
            <summary>
Type: Vector2
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.WindowMinSize">
            <summary>
Type: Vector2
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.WindowBorderSize">
            <summary>
Type: float
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.WindowRounding">
            <summary>
Type: float
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.WindowPadding">
            <summary>
Type: Vector2
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.DisabledAlpha">
            <summary>
Type: float
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiStyleVar.Alpha">
            <summary>
Type: float
</summary>
        </member>
        <member name="T:IVSDKDotNet.Enums.eImGuiChildFlags">
            <summary>
Flags for ImGuiIV.BeginChild()
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiChildFlags.FrameStyle">
            <summary>
Style the child window like a framed item: use FrameBg, FrameRounding, FrameBorderSize, FramePadding instead of ChildBg, ChildRounding, ChildBorderSize, WindowPadding.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiChildFlags.AlwaysAutoResize">
            <summary>
Combined with AutoResizeX/AutoResizeY. Always measure size even when child is hidden, always return true, always disable clipping optimization! NOT RECOMMENDED.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiChildFlags.AutoResizeY">
            <summary>
Enable auto-resizing height. Read "IMPORTANT: Size measurement" details above.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiChildFlags.AutoResizeX">
            <summary>
Enable auto-resizing width. Read "IMPORTANT: Size measurement" details above.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiChildFlags.ResizeY">
            <summary>
Allow resize from bottom border (layout direction).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiChildFlags.ResizeX">
            <summary>
Allow resize from right border (layout direction). Enable .ini saving (unless ImGuiWindowFlags_NoSavedSettings passed to window flags)
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiChildFlags.AlwaysUseWindowPadding">
            <summary>
Pad with style.WindowPadding even if no border are drawn (no padding by default for non-bordered child windows because it makes more sense)
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiChildFlags.Border">
            <summary>
Show an outer border and enable WindowPadding. (IMPORTANT: this is always == 1 == true for legacy reason)
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.DisableControllerInput">
            <summary>
This makes the window able to disable the controller input, so GTA IV doesn't receive any controller input anymore. 
Useful for when you want to navigate through your ImGui window with a controller.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.NoMouseEnable">
            <summary>
This makes the window not being able to enable the mouse cursor.
</summary>
        </member>
        <member name="T:IVSDKDotNet.Enums.eImGuiWindowFlags">
            <summary>
Flags for ImGuiIV.Begin()
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiWindowFlags.NoDocking">
            <summary>
Disable docking of this window
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiWindowFlags.UnsavedDocument">
            <summary>
Display a dot next to the title. When used in a tab/docking context, tab is selected when clicking the X + closure is not assumed (will wait for user to stop submitting the tab). Otherwise closure is assumed when pressing the X, so if you keep submitting the tab may reappear at end of tab bar.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiWindowFlags.NoNavFocus">
            <summary>
No focusing toward this window with gamepad/keyboard navigation (e.g. skipped by CTRL+TAB)
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiWindowFlags.NoNavInputs">
            <summary>
No gamepad/keyboard navigation within the window
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiWindowFlags.NoBringToFrontOnFocus">
            <summary>
Disable bringing window to front when taking focus (e.g. clicking on it or programmatically giving it focus)
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiWindowFlags.NoFocusOnAppearing">
            <summary>
Disable taking focus when transitioning from hidden to visible state
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiWindowFlags.HorizontalScrollbar">
            <summary>
Allow horizontal scrollbar to appear (off by default). You may use SetNextWindowContentSize(ImVec2(width,0.0f)); prior to calling Begin() to specify width. Read code in imgui_demo in the "Horizontal Scrolling" section.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiWindowFlags.MenuBar">
            <summary>
Has a menu-bar
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiWindowFlags.NoMouseInputs">
            <summary>
Disable catching mouse, hovering test with pass through.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiWindowFlags.NoSavedSettings">
            <summary>
Never load/save settings in .ini file
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiWindowFlags.NoBackground">
            <summary>
Disable drawing background color (WindowBg, etc.) and outside border. Similar as using SetNextWindowBgAlpha(0.0f).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiWindowFlags.AlwaysAutoResize">
            <summary>
Resize every window to its content every frame
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiWindowFlags.NoCollapse">
            <summary>
Disable user collapsing window by double-clicking on it. Also referred to as Window Menu Button (e.g. within a docking node).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiWindowFlags.NoScrollWithMouse">
            <summary>
Disable user vertically scrolling with mouse wheel. On child window, mouse wheel will be forwarded to the parent unless NoScrollbar is also set.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiWindowFlags.NoScrollbar">
            <summary>
Disable scrollbars (window can still scroll with mouse or programmatically)
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiWindowFlags.NoMove">
            <summary>
Disable user moving the window
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiWindowFlags.NoResize">
            <summary>
Disable user resizing with the lower-right grip
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiWindowFlags.NoTitleBar">
            <summary>
Disable title-bar
</summary>
        </member>
        <member name="T:IVSDKDotNet.Enums.eImGuiDir">
            <summary>
A cardinal direction.
</summary>
        </member>
        <member name="T:IVSDKDotNet.Enums.eImGuiAxis">
            <summary>
X/Y enums are fixed to 0/1 so they may be used to index Vector2.
</summary>
        </member>
        <member name="T:IVSDKDotNet.Enums.eImGuiComboFlags">
            <summary>
Flags for ImGui::BeginCombo().
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiComboFlags.WidthFitPreview">
            <summary>
Width dynamically calculated from preview contents.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiComboFlags.NoPreview">
            <summary>
Display only a square arrow button.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiComboFlags.NoArrowButton">
            <summary>
Display on the preview box without the square arrow button.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiComboFlags.HeightLargest">
            <summary>
As many fitting items as possible.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiComboFlags.HeightLarge">
            <summary>
Max ~20 items visible.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiComboFlags.HeightRegular">
            <summary>
Max ~8 items visible (default).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiComboFlags.HeightSmall">
            <summary>
Max ~4 items visible. Tip: If you want your combo popup to be a specific size you can use SetNextWindowSizeConstraints() prior to calling BeginCombo().
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiComboFlags.PopupAlignLeft">
            <summary>
Align the popup toward the left by default.
</summary>
        </member>
        <member name="T:IVSDKDotNet.Enums.eImGuiSelectableFlags">
            <summary>
Flags for ImGui::Selectable().
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiSelectableFlags.AllowOverlap">
            <summary>
(WIP) Hit testing to allow subsequent widgets to overlap this one.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiSelectableFlags.Disabled">
            <summary>
Cannot be selected, display grayed out text.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiSelectableFlags.AllowDoubleClick">
            <summary>
Generate press events on double clicks too.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiSelectableFlags.SpanAllColumns">
            <summary>
Frame will span all columns of its container table (text will still fit in current column).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiSelectableFlags.DontClosePopups">
            <summary>
Clicking this doesn't close parent popup window.
</summary>
        </member>
        <member name="T:IVSDKDotNet.Enums.eImGuiTabBarFlags">
            <summary>
Flags for ImGui::BeginTabBar().
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTabBarFlags.FittingPolicyScroll">
            <summary>
Add scroll buttons when tabs don't fit.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTabBarFlags.FittingPolicyResizeDown">
            <summary>
Resize tabs when they don't fit.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTabBarFlags.NoTooltip">
            <summary>
Disable tooltips when hovering a tab.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTabBarFlags.NoTabListScrollingButtons">
            <summary>
Disable scrolling buttons (apply when fitting policy is FittingPolicyScroll).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTabBarFlags.NoCloseWithMiddleMouseButton">
            <summary>
Disable behavior of closing tabs (that are submitted with p_open != NULL) with middle mouse button. You can still repro this behavior on user's side with if (IsItemHovered() and IsMouseClicked(2)) *p_open = false.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTabBarFlags.TabListPopupButton">
            <summary>
Disable buttons to open the tab list popup.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTabBarFlags.AutoSelectNewTabs">
            <summary>
Automatically select new tabs when they appear.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTabBarFlags.Reorderable">
            <summary>
Allow manually dragging tabs to re-order them + New tabs are appended at the end of list-
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiSliderFlags.InvalidMask_">
            <summary>
[Internal] We treat using those bits as being potentially a 'float power' argument from the previous API that has got miscast to this enum, and will trigger an assert if needed.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiSliderFlags.NoInput">
            <summary>
Disable CTRL+Click or Enter key allowing to input text directly into the widget.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiSliderFlags.NoRoundToFormat">
            <summary>
Disable rounding underlying value to match precision of the display format string (e.g. %.3f values are rounded to those 3 digits).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiSliderFlags.Logarithmic">
            <summary>
Make the widget logarithmic (linear otherwise). Consider using ImGuiSliderFlags_NoRoundToFormat with this if using a format-string with small amount of digits.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiSliderFlags.AlwaysClamp">
            <summary>
Clamp value to min/max bounds when input manually with CTRL+Click. By default CTRL+Click allows going out of bounds.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiScrollFlags.NoScrollParent">
            <summary>
Disable forwarding scrolling to parent window if required to keep item/rect visible (only scroll window the function was applied to)..
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiScrollFlags.AlwaysCenterY">
            <summary>
Always center the result item on Y axis [default for Y axis for appearing window).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiScrollFlags.AlwaysCenterX">
            <summary>
Always center the result item on X axis [rarely used].
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiScrollFlags.KeepVisibleCenterY">
            <summary>
If item is not visible: scroll to make the item centered on Y axis.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiScrollFlags.KeepVisibleCenterX">
            <summary>
If item is not visible: scroll to make the item centered on X axis [rarely used].
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiScrollFlags.KeepVisibleEdgeY">
            <summary>
If item is not visible: scroll as little as possible on Y axis to bring item back into view [default for Y axis for windows that are already visible].
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiScrollFlags.KeepVisibleEdgeX">
            <summary>
If item is not visible: scroll as little as possible on X axis to bring item back into view [default for X axis].
</summary>
        </member>
        <member name="T:IVSDKDotNet.Enums.eImGuiDragDropFlags">
            <summary>
Flags for ImGui::BeginDragDropSource(), ImGui::AcceptDragDropPayload().
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiDragDropFlags.AcceptNoPreviewTooltip">
            <summary>
Request hiding the BeginDragDropSource tooltip from the BeginDragDropTarget site.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiDragDropFlags.AcceptNoDrawDefaultRect">
            <summary>
Do not draw the default highlight rectangle when hovering over target.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiDragDropFlags.AcceptBeforeDelivery">
            <summary>
AcceptDragDropPayload() will returns true even before the mouse button is released. You can then call IsDelivery() to test if the payload needs to be delivered.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiDragDropFlags.SourceAutoExpirePayload">
            <summary>
Automatically expire the payload if the source cease to be submitted (otherwise payloads are persisting while being dragged).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiDragDropFlags.SourceExtern">
            <summary>
External source (from outside of dear imgui), won't attempt to read current item/window info. Will always return true. Only one Extern source can be active simultaneously.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiDragDropFlags.SourceAllowNullID">
            <summary>
Allow items such as Text(), Image() that have no unique identifier to be used as drag source, by manufacturing a temporary identifier based on their window-relative position. This is extremely unusual within the dear imgui ecosystem and so we made it explicit.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiDragDropFlags.SourceNoHoldToOpenOthers">
            <summary>
Disable the behavior that allows to open tree nodes and collapsing header by holding over them while dragging a source item.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiDragDropFlags.SourceNoDisableHover">
            <summary>
By default, when dragging we clear data so that IsItemHovered() will return false, to avoid subsequent user code submitting tooltips. This flag disables this behavior so you can still call IsItemHovered() on the source item.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiDragDropFlags.SourceNoPreviewTooltip">
            <summary>
Disable preview tooltip. By default, a successful call to BeginDragDropSource opens a tooltip so you can display a preview or description of the source contents. This flag disables this behavior.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiCond.Appearing">
            <summary>
Set the variable if the object/window is appearing after being hidden/inactive (or the first time).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiCond.FirstUseEver">
            <summary>
Set the variable if the object/window has no persistently saved data (no entry in .ini file).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiCond.Once">
            <summary>
Set the variable once per runtime session (only the first call will succeed).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiCond.Always">
            <summary>
No condition (always set the variable), same as _None.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiCond.None">
            <summary>
No condition (always set the variable), same as _Always.
</summary>
        </member>
        <member name="T:IVSDKDotNet.Enums.eImGuiColorEditFlags">
            <summary>
Flags for ColorEdit3() / ColorEdit4() / ColorPicker3() / ColorPicker4() / ColorButton().
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiColorEditFlags.DefaultOptions_">
            <summary>
Defaults Options. You can set application defaults using SetColorEditOptions(). The intent is that you probably don't want to
override them in most of your calls. Let the user choose via the option menu and/or call SetColorEditOptions() once during startup.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiColorEditFlags.InputHSV">
            <summary>
[Input] ColorEdit, ColorPicker: input and output data in HSV format.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiColorEditFlags.InputRGB">
            <summary>
[Input] ColorEdit, ColorPicker: input and output data in RGB format.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiColorEditFlags.PickerHueWheel">
            <summary>
[Picker] ColorPicker: wheel for Hue, triangle for Sat/Value.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiColorEditFlags.PickerHueBar">
            <summary>
[Picker] ColorPicker: bar for Hue, rectangle for Sat/Value.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiColorEditFlags.Float">
            <summary>
[DataType] ColorEdit, ColorPicker, ColorButton: _display_ values formatted as 0.0f..1.0f floats instead of 0..255 integers. No round-trip of value via integers.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiColorEditFlags.Uint8">
            <summary>
[DataType] ColorEdit, ColorPicker, ColorButton: _display_ values formatted as 0..255.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiColorEditFlags.DisplayRGB">
            <summary>
[Display] ColorEdit: override _display_ type among RGB/HSV/Hex. ColorPicker: select any combination using one or more of RGB/HSV/Hex.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiColorEditFlags.HDR">
            <summary>
(WIP) ColorEdit: Currently only disable 0.0f..1.0f limits in RGBA edition (note: you probably want to use Float flag as well).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiColorEditFlags.AlphaPreviewHalf">
            <summary>
ColorEdit, ColorPicker, ColorButton: display half opaque / half checkerboard, instead of opaque.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiColorEditFlags.AlphaPreview">
            <summary>
ColorEdit, ColorPicker, ColorButton: display preview as a transparent color over a checkerboard, instead of opaque.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiColorEditFlags.AlphaBar">
            <summary>
ColorEdit, ColorPicker: show vertical alpha bar/gradient in picker.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiColorEditFlags.NoBorder">
            <summary>
ColorButton: disable border (which is enforced by default).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiColorEditFlags.NoDragDrop">
            <summary>
ColorEdit: disable drag and drop target. ColorButton: disable drag and drop source.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiColorEditFlags.NoSidePreview">
            <summary>
ColorPicker: disable bigger color preview on right side of the picker, use small color square preview instead.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiColorEditFlags.NoLabel">
            <summary>
ColorEdit, ColorPicker: disable display of inline text label (the label is still forwarded to the tooltip and picker).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiColorEditFlags.NoTooltip">
            <summary>
ColorEdit, ColorPicker, ColorButton: disable tooltip when hovering the preview.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiColorEditFlags.NoInputs">
            <summary>
ColorEdit, ColorPicker: disable inputs sliders/text widgets (e.g. to show only the small preview color square).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiColorEditFlags.NoSmallPreview">
            <summary>
ColorEdit, ColorPicker: disable color square preview next to the inputs. (e.g. to show only the inputs).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiColorEditFlags.NoOptions">
            <summary>
ColorEdit: disable toggling options menu when right-clicking on inputs/small preview.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiColorEditFlags.NoPicker">
            <summary>
ColorEdit: disable picker when clicking on color square.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiColorEditFlags.NoAlpha">
            <summary>
ColorEdit, ColorPicker, ColorButton: ignore Alpha component (will only read 3 components from the input pointer).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiPopupFlags.AnyPopupLevel">
            <summary>
For IsPopupOpen(): search/test at any level of the popup stack (default test in the current level).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiPopupFlags.AnyPopupId">
            <summary>
For IsPopupOpen(): ignore the ImGuiID parameter and test for any popup.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiPopupFlags.NoOpenOverItems">
            <summary>
For BeginPopupContextWindow(): don't return true when hovering items, only when hovering empty space.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiPopupFlags.NoOpenOverExistingPopup">
            <summary>
For OpenPopup*(), BeginPopupContext*(): don't open if there's already a popup at the same level of the popup stack.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiPopupFlags.MouseButtonMiddle">
            <summary>
For BeginPopupContext*(): open on Middle Mouse release. Guaranteed to always be == 2 (same as ImGuiMouseButton_Middle).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiPopupFlags.MouseButtonRight">
            <summary>
For BeginPopupContext*(): open on Right Mouse release. Guaranteed to always be == 1 (same as ImGuiMouseButton_Right).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiPopupFlags.MouseButtonLeft">
            <summary>
For BeginPopupContext*(): open on Left Mouse release. Guaranteed to always be == 0 (same as ImGuiMouseButton_Left).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTooltipFlags.OverridePrevious">
            <summary>
Clear/ignore previously submitted tooltip (defaults to append).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiSeparatorFlags.SpanAllColumns">
            <summary>
Make separator cover all columns of a legacy Columns() set.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiSeparatorFlags.Horizontal">
            <summary>
Axis default to current layout type, so generally Horizontal unless e.g. in a menu bar.
</summary>
        </member>
        <member name="T:IVSDKDotNet.Enums.eImGuiTabItemFlags">
            <summary>
Flags for ImGui::BeginTabItem().
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTabItemFlags.Trailing">
            <summary>
Enforce the tab position to the right of the tab bar (before the scrolling buttons).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTabItemFlags.Leading">
            <summary>
Enforce the tab position to the left of the tab bar (after the tab list popup button).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTabItemFlags.NoReorder">
            <summary>
Disable reordering this tab or having another tab cross over this tab.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTabItemFlags.NoTooltip">
            <summary>
Disable tooltip for the given tab.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTabItemFlags.NoPushId">
            <summary>
Don't call PushID(tab-&gt;ID)/PopID() on BeginTabItem()/EndTabItem().
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTabItemFlags.NoCloseWithMiddleMouseButton">
            <summary>
Disable behavior of closing tabs (that are submitted with p_open != NULL) with middle mouse button. You can still repro this behavior on user's side with if (IsItemHovered() and IsMouseClicked(2)) *p_open = false.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTabItemFlags.SetSelected">
            <summary>
Trigger flag to programmatically make the tab selected when calling BeginTabItem().
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiTabItemFlags.UnsavedDocument">
            <summary>
Display a dot next to the title + tab is selected when clicking the X + closure is not assumed (will wait for user to stop submitting the tab). Otherwise closure is assumed when pressing the X, so if you keep submitting the tab may reappear at end of tab bar.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiFocusedFlags.DockHierarchy">
            <summary>
Consider docking hierarchy (treat dockspace host as parent of docked window) (when used with _ChildWindows or _RootWindow)
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiFocusedFlags.NoPopupHierarchy">
            <summary>
Do not consider popup hierarchy (do not treat popup emitter as parent of popup) (when used with _ChildWindows or _RootWindow)
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiFocusedFlags.AnyWindow">
            <summary>
Return true if any window is focused. Important: If you are trying to tell how to dispatch your low-level inputs, do NOT use this. Use 'io.WantCaptureMouse' instead! Please read the FAQ!
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiFocusedFlags.RootWindow">
            <summary>
Test from root window (top most parent of the current hierarchy)
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiFocusedFlags.ChildWindows">
            <summary>
Return true if any children of the window is focused
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiHoveredFlags.NoSharedDelay">
            <summary>
IsItemHovered() only: Disable shared delay system where moving from one item to the next keeps the previous timer for a short time (standard for tooltips with long delays)
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiHoveredFlags.DelayNormal">
            <summary>
IsItemHovered() only: Return true after style.HoverDelayNormal elapsed (~0.40 sec) (shared between items) + requires mouse to be stationary for style.HoverStationaryDelay (once per item).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiHoveredFlags.DelayShort">
            <summary>
IsItemHovered() only: Return true after style.HoverDelayShort elapsed (~0.15 sec) (shared between items) + requires mouse to be stationary for style.HoverStationaryDelay (once per item).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiHoveredFlags.DelayNone">
            <summary>
IsItemHovered() only: Return true immediately (default). As this is the default you generally ignore this.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiHoveredFlags.Stationary">
            <summary>
// Require mouse to be stationary for style.HoverStationaryDelay (~0.15 sec) _at least one time_. After this, can move on same item/window. Using the stationary test tends to reduces the need for a long delay.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiHoveredFlags.ForTooltip">
            <summary>
Shortcut for standard flags when using IsItemHovered() + SetTooltip() sequence.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiHoveredFlags.NoNavOverride">
            <summary>
IsItemHovered() only: Disable using gamepad/keyboard navigation state when active, always query mouse
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiHoveredFlags.AllowWhenDisabled">
            <summary>
IsItemHovered() only: Return true even if the item is disabled
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiHoveredFlags.AllowWhenOverlappedByWindow">
            <summary>
IsItemHovered() only: Return true even if the position is obstructed or overlapped by another window.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiHoveredFlags.AllowWhenOverlappedByItem">
            <summary>
IsItemHovered() only: Return true even if the item uses AllowOverlap mode and is overlapped by another hoverable item.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiHoveredFlags.AllowWhenBlockedByActiveItem">
            <summary>
Return true even if an active item is blocking access to this item/window. Useful for Drag and Drop patterns.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiHoveredFlags.AllowWhenBlockedByPopup">
            <summary>
Return true even if a popup window is normally blocking access to this item/window
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiHoveredFlags.DockHierarchy">
            <summary>
IsWindowHovered() only: Consider docking hierarchy (treat dockspace host as parent of docked window) (when used with _ChildWindows or _RootWindow)
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiHoveredFlags.NoPopupHierarchy">
            <summary>
IsWindowHovered() only: Do not consider popup hierarchy (do not treat popup emitter as parent of popup) (when used with _ChildWindows or _RootWindow)
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiHoveredFlags.AnyWindow">
            <summary>
IsWindowHovered() only: Return true if any window is hovered
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiHoveredFlags.RootWindow">
            <summary>
IsWindowHovered() only: Test from root window (top most parent of the current hierarchy)
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiHoveredFlags.ChildWindows">
            <summary>
IsWindowHovered() only: Return true if any children of the window is hovered
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiHoveredFlags.None">
            <summary>
Return true if directly over the item/window, not obstructed by another window, not obstructed by an active popup or modal blocking inputs under them.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiMouseSource.Pen">
            <summary>
Input is coming from a pressure/magnetic pen (often used in conjunction with high-sampling rates).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiMouseSource.TouchScreen">
            <summary>
Input is coming from a touch screen (no hovering prior to initial press, less precise initial press aiming, dual-axis wheeling possible).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiMouseSource.Mouse">
            <summary>
Input is coming from an actual mouse.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiButtonFlags.MouseButtonMiddle">
            <summary>
React on center mouse button
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiButtonFlags.MouseButtonRight">
            <summary>
React on right mouse button.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImGuiButtonFlags.MouseButtonLeft">
            <summary>
React on left mouse button (default).
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImDrawFlags.RoundCornersDefault_">
            <summary>
Default to ALL corners if none of the _RoundCornersXX flags are specified.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImDrawFlags.RoundCornersNone">
            <summary>
AddRect(), AddRectFilled(), PathRect(): disable rounding on all corners (when rounding &gt; 0.0f). This is NOT zero, NOT an implicit flag!
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImDrawFlags.RoundCornersBottomRight">
            <summary>
AddRect(), AddRectFilled(), PathRect(): enable rounding bottom-right corner only (when rounding &gt; 0.0f, we default to all corners). Wax 0x08.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImDrawFlags.RoundCornersBottomLeft">
            <summary>
AddRect(), AddRectFilled(), PathRect(): enable rounding bottom-left corner only (when rounding &gt; 0.0f, we default to all corners). Was 0x04.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImDrawFlags.RoundCornersTopRight">
            <summary>
AddRect(), AddRectFilled(), PathRect(): enable rounding top-right corner only (when rounding &gt; 0.0f, we default to all corners). Was 0x02.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImDrawFlags.RoundCornersTopLeft">
            <summary>
AddRect(), AddRectFilled(), PathRect(): enable rounding top-left corner only (when rounding &gt; 0.0f, we default to all corners). Was 0x01.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eImDrawFlags.Closed">
            <summary>
PathStroke(), AddPolyline(): specify that shape should be closed (Important: this is always == 1 for legacy reason)
</summary>
        </member>
        <member name="T:IVSDKDotNet.Enums.eResult">
            <summary>
A bunch of different results.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Already">
            <summary>
Something is already added, a function already completed or whatever.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.ImGuiNotInitialized">
            <summary>
ImGui is not initialized.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.InvalidName">
            <summary>
The given is invalid.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.InvalidData">
            <summary>
The given data is invalid.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Unknown">
            <summary>
Something unknown happened.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.OK">
            <summary>
All good!
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.TrafficLight">
            <summary>
This i can spot on traffic lights
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Vehicle">
            <summary>
This i can spot on vehicle lights (headlights, brake lights, indicator lights and sirens).
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Unk3">
            <summary>
Never actually seen being used.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.ExteriorOnly">
            <summary>
Exterior only? This i can also spot on *almost* every light so far that is outside. Entities like the player and vehicles also have this flag, when entering an interior, the light with this flag goes away. Must be exterior only!
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.InteriorOnly">
            <summary>
Interior only? Only spotted on lights that where indoors. Tho this flag is also on street lights combined with flag 64 (ExteriorOnly).
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Buzzing">
            <summary>
Pretty sure this is a flag for Flickering/Buzzing light. This is quite hard to see actually.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.DrawVolume">
            <summary>
This flag makes the light volumetric!
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.CastShadow">
            <summary>
This flag makes the light cast a shadow!
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Unk2">
            <summary>
Unknown for now.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Unk1">
            <summary>
Unknown for now. Mostly appears on entities like the player or vehicles. Ambient occlusion?
</summary>
            <summary>
This i can spot on *almost* every light so far. Not quite sure what this is for tho.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Spot">
            <summary>
A spot light.
</summary>
        </member>
        <member name="F:&lt;unknown type&gt;.Point">
            <summary>
A point light. They are everywhere!
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eNewGetInVehicleType.GET_IN_DEFAULT_PLAYER">
            <summary>
The default.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eNewGetInVehicleType.GET_IN_TRAIN">
            <summary>
Trains will only work using this type but regular cars are unaffected.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eNewGetInVehicleType.GET_IN_NETWORK">
            <summary>
Get into the passenger seat if the driver is friendly.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eFontScaling.Pixel">
            <summary>
A value between 0 and the maximum screen resolution (check CGame.Resolution to get the size)
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eFontScaling.ScreenUnits">
            <summary>
A value between 0 and 1, where 1 equals full screen size
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eFontScaling.FontSize">
            <summary>
A value between 0 and 20, where 20 equals full screen size
</summary>
        </member>
        <member name="T:IVSDKDotNet.Enums.eTask">
            <summary>
All available tasks.
</summary>
        </member>
        <member name="T:IVSDKDotNet.Enums.eNmID">
            <summary>
Euphoria related (natives *NM_MESSAGE)
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.ePickupType.PICKUP_TYPE_MONEY2">
            <summary>
Preplaced money? Fixed amount?
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.ePickupType.PICKUP_TYPE_MONEY">
            <summary>
The usual money drops. Dead peds drop money of this type. Stockade money drops seem to also use this type.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eAssembliesLocation.Custom">
            <summary>
If Script.AssembliesLocation is set to Custom, you can specify your own path to the Assemblies for your Script.
The path is relative to the root directory of GTA IV.
Example: IVSDKDotNet\scripts\AssembliesForMyEpicScript - The Assemblies for your Script will now be loaded from the AssembliesForMyEpicScript folder.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eAssembliesLocation.DecideManuallyForEachAssembly">
            <summary>
If Script.AssembliesLocation is set to DecideManuallyForEachAssembly, you say that you want to manually give return absolut path for each Assembly that you use in your Script.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eAssembliesLocation.ScriptsDirectory">
            <summary>
If Script.AssembliesLocation is set to ScriptDirectory, you say that the Assemblies for your Script are located within the scripts folder.
</summary>
        </member>
        <member name="F:IVSDKDotNet.Enums.eAssembliesLocation.GameRootDirectory">
            <summary>
If Script.AssembliesLocation is set to GameRootDirectory, you say that the Assemblies for your Script are located within the root directory of GTA IV.
</summary>
        </member>
        <!-- Discarding badly formed XML document comment for member 'F:IVSDKDotNet.Enums.eImGuiWindowFlags.AlwaysVerticalScrollbar'. -->
        <!-- Discarding badly formed XML document comment for member 'F:IVSDKDotNet.Enums.eImGuiWindowFlags.AlwaysHorizontalScrollbar'. -->
    </members>
</doc>